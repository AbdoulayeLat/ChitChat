{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Contacts from 'react-native-contacts';\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport { getColorByLetter } from \"../utils/Index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Profile(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      contactInfo = _useState2[0],\n      setContactInfo = _useState2[1];\n\n  useEffect(function () {\n    getContact(route.params.contactInfo.id);\n  }, [route.params.contactInfo.id]);\n\n  function getContact(id) {\n    Contacts.getContactById(id).then(function (contact) {\n      return setContactInfo(_objectSpread(_objectSpread({}, contact), {}, {\n        color: getColorByLetter(contact.displayName[0])\n      }));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }\n\n  function makeCall(phoneNumber) {\n    Linking.openURL(\"tel:\" + phoneNumber);\n  }\n\n  function makeMessage(phoneNumber) {\n    Linking.openURL(\"sms:\" + phoneNumber);\n  }\n\n  function deleteContact(contact) {\n    Contacts.deleteContact(contact).then(function () {\n      return navigation.navigate('MyContacts');\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }\n\n  if (!contactInfo) {\n    return _jsx(ActivityIndicator, {\n      size: 32\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(ImageBackground, {\n      source: {\n        uri: contactInfo.hasThumbnail ? contactInfo.thumbNailpath : null\n      },\n      style: _objectSpread(_objectSpread({}, styles.backgroundImage), {}, {\n        backgroundColor: contactInfo.color\n      }),\n      children: [!contactInfo.hasThumbnail ? _jsx(FontAwesome5, {\n        name: \"user-alt\",\n        size: 125,\n        color: \"white\"\n      }) : null, _jsx(AntDesign, {\n        onPress: function onPress() {\n          return deleteContact(contactInfo);\n        },\n        name: \"delete\",\n        size: 28,\n        color: \"white\",\n        style: {\n          position: 'absolute',\n          top: StatusBar.currentHeight,\n          right: 20\n        }\n      }), _jsx(Text, {\n        style: styles.mainText,\n        children: contactInfo.displayName\n      })]\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        marginTop: 20\n      },\n      children: _jsx(FlatList, {\n        data: contactInfo.phoneNumbers,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsxs(View, {\n            style: styles.phonenNumberContainer,\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 16,\n                marginLeft: 10\n              },\n              children: item.number\n            }), _jsx(MaterialIcons, {\n              name: \"message\",\n              size: 28,\n              color: \"green\",\n              onPress: function onPress() {\n                return makeMessage(item.number);\n              }\n            }), _jsx(MaterialIcons, {\n              name: \"call\",\n              size: 28,\n              color: \"green\",\n              onPress: function onPress() {\n                return makeCall(item.number);\n              }\n            })]\n          });\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  backgroundImage: {\n    width: Dimensions.get('screen').width,\n    height: Dimensions.get('screen').height / 3,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mainText: {\n    position: 'absolute',\n    bottom: 20,\n    left: 20,\n    fontSize: 30,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  phonenNumberContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    marginBottom: 20,\n    paddingHorizontal: 10,\n    elevation: 5,\n    paddingVertical: 20,\n    backgroundColor: 'white',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"sources":["/Users/cheikh/Desktop/ChitChat1/Project/ChitChat_Mobile/screens/Profile.js"],"names":["React","useState","useEffect","Contacts","FontAwesome5","MaterialIcons","AntDesign","getColorByLetter","Profile","navigation","route","contactInfo","setContactInfo","getContact","params","id","getContactById","then","contact","color","displayName","catch","error","console","log","makeCall","phoneNumber","Linking","openURL","makeMessage","deleteContact","navigate","styles","container","uri","hasThumbnail","thumbNailpath","backgroundImage","backgroundColor","position","top","StatusBar","currentHeight","right","mainText","flex","marginTop","phoneNumbers","item","phonenNumberContainer","fontSize","marginLeft","number","StyleSheet","create","width","Dimensions","get","height","alignItems","justifyContent","bottom","left","fontWeight","marginHorizontal","marginBottom","paddingHorizontal","elevation","paddingVertical","flexDirection"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ImageBackground,\n  Dimensions,\n  StatusBar,\n  FlatList,\n  ActivityIndicator,\n  Linking,\n} from 'react-native';\nimport Contacts from 'react-native-contacts';\n\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport {getColorByLetter} from '../utils/Index';\n\nexport default function Profile({navigation, route}) {\n  const [contactInfo, setContactInfo] = useState(null);\n\n  useEffect(() => {\n    getContact(route.params.contactInfo.id);\n  }, [route.params.contactInfo.id]);\n\n  function getContact(id) {\n    Contacts.getContactById(id)\n      .then(contact =>\n        setContactInfo({\n          ...contact,\n          color: getColorByLetter(contact.displayName[0]),\n        }),\n      )\n      .catch(error => console.log(error));\n  }\n\n  function makeCall(phoneNumber) {\n    Linking.openURL(`tel:${phoneNumber}`);\n  }\n  function makeMessage(phoneNumber) {\n    Linking.openURL(`sms:${phoneNumber}`);\n  }\n\n  function deleteContact(contact) {\n    Contacts.deleteContact(contact)\n      .then(() => navigation.navigate('MyContacts'))\n      .catch(error => console.log(error));\n  }\n\n  if (!contactInfo) {\n    return <ActivityIndicator size={32} />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground\n        source={{\n          uri: contactInfo.hasThumbnail ? contactInfo.thumbNailpath : null,\n        }}\n        style={{...styles.backgroundImage, backgroundColor: contactInfo.color}}>\n        {!contactInfo.hasThumbnail ? (\n          <FontAwesome5 name=\"user-alt\" size={125} color=\"white\" />\n        ) : null}\n        <AntDesign\n          onPress={() => deleteContact(contactInfo)}\n          name=\"delete\"\n          size={28}\n          color=\"white\"\n          style={{\n            position: 'absolute',\n            top: StatusBar.currentHeight,\n            right: 20,\n          }}\n        />\n        <Text style={styles.mainText}>{contactInfo.displayName}</Text>\n      </ImageBackground>\n\n      <View style={{flex: 1, marginTop: 20}}>\n        <FlatList\n          data={contactInfo.phoneNumbers}\n          keyExtractor={item => item.id}\n          renderItem={({item}) => (\n            <View style={styles.phonenNumberContainer}>\n              <Text style={{fontSize: 16, marginLeft: 10}}>{item.number}</Text>\n              <MaterialIcons\n                name=\"message\"\n                size={28}\n                color=\"green\"\n                onPress={() => makeMessage(item.number)}\n              />\n              <MaterialIcons\n                name=\"call\"\n                size={28}\n                color=\"green\"\n                onPress={() => makeCall(item.number)}\n              />\n            </View>\n          )}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  backgroundImage: {\n    width: Dimensions.get('screen').width,\n    height: Dimensions.get('screen').height / 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mainText: {\n    position: 'absolute',\n    bottom: 20,\n    left: 20,\n    fontSize: 30,\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  phonenNumberContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    marginBottom: 20,\n    paddingHorizontal: 10,\n    elevation: 5,\n    paddingVertical: 20,\n    backgroundColor: 'white',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}