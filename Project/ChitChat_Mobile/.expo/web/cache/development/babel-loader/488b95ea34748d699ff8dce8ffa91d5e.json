{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useLayoutEffect, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Contacts from 'react-native-contacts';\nimport { Button, Input } from 'react-native-elements';\nimport PhoneInput from 'react-native-phone-number-input';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddContact(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(['']),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phoneNumber = _useState6[0],\n      setphoneNumber = _useState6[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: 'Add  a new Contact',\n      headerBackTitle: 'Contacts',\n      headerStyle: {\n        backgroundColor: '#1f9'\n      },\n      headerTitleStyle: {\n        color: '#050a9c'\n      },\n      headTintColor: 'black'\n    });\n  }, [navigation]);\n  useEffect(function () {\n    if (phoneNumber[phoneNumber.length - 1].length > 0) {\n      setphoneNumber(function (prevState) {\n        return [].concat(_toConsumableArray(prevState), ['']);\n      });\n    }\n\n    try {\n      if (phoneNumber[phoneNumber.length - 2].length === 0 && phoneNumber.length >= 2) {\n        setphoneNumber(function (prevState) {\n          var newState = prevState.slice();\n          newState.pop();\n          return newState;\n        });\n      }\n    } catch (_unused) {}\n  }, [phoneNumber]);\n\n  function addContact() {\n    if (!firstName && !lastName || phoneNumber.length === 1) {\n      Alert.alert('Something went wrong', 'Please fill all the  fields');\n      return;\n    }\n\n    var myphoneNumber = phoneNumber.map(function (ph) {\n      return {\n        label: 'mobile',\n        number: ph\n      };\n    });\n    var contactInfo = {\n      displayName: firstName + ' ' + lastName,\n      givenName: firstName + ' ' + lastName,\n      phoneNumber: myphoneNumber\n    };\n    Contacts.addContact(contactInfo).then(function () {\n      return navigation.navigate('Contacts');\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Input, {\n        label: \"First Name\",\n        placeholder: \" Enter First Name\",\n        value: firstName,\n        onChangeText: function onChangeText(text) {\n          return setFirstName(text);\n        }\n      }), _jsx(Input, {\n        label: \"Last Name\",\n        placeholder: \" Enter Last Name\",\n        value: lastName,\n        onChangeText: function onChangeText(text) {\n          return setLastName(text);\n        }\n      })]\n    }), phoneNumber.map(function (phoneNumber, index) {\n      return _jsx(View, {\n        style: _objectSpread(_objectSpread({}, styles.inputContainer), {}, {\n          marginVertical: 0\n        }),\n        children: _jsx(PhoneInput, {\n          label: \"Phone Number\",\n          style: styles.input,\n          defaultCode: \"CA\",\n          placeholder: \"Phone Number\",\n          keyboardType: \"number-pad\",\n          shadowOffset: true,\n          value: phoneNumber,\n          onChangeText: function onChangeText(text) {\n            return setphoneNumber(function (prevState) {\n              var newState = prevState.slice();\n              newState[index] = text;\n              return newState;\n            });\n          }\n        })\n      }, index);\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return addContact();\n      },\n      title: \"Create Contact\",\n      buttonStyle: {\n        borderColor: 'rgba(78, 116, 289, 1)',\n        backgroundColor: '#1f9'\n      },\n      type: \"outline\",\n      raised: true,\n      titleStyle: {\n        color: '#050a9c'\n      },\n      containerStyle: {\n        width: 200,\n        marginHorizontal: 50,\n        marginVertical: 10\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    padding: 10,\n    margin: 10\n  },\n  input: {\n    borderBottomWidth: 0.5,\n    borderBottomColor: 'gray',\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/cheikh/Desktop/ChitChat1/Project/ChitChat_Mobile/screens/AddContact.js"],"names":["React","useState","useLayoutEffect","useEffect","Contacts","Button","Input","PhoneInput","AddContact","navigation","firstName","setFirstName","lastName","setLastName","phoneNumber","setphoneNumber","setOptions","title","headerBackTitle","headerStyle","backgroundColor","headerTitleStyle","color","headTintColor","length","prevState","newState","slice","pop","addContact","Alert","alert","myphoneNumber","map","ph","label","number","contactInfo","displayName","givenName","then","navigate","catch","error","console","log","styles","container","inputContainer","text","index","marginVertical","input","borderColor","width","marginHorizontal","StyleSheet","create","flex","padding","margin","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, {useState, useLayoutEffect, useEffect} from 'react';\nimport {View, Text, StyleSheet, Alert} from 'react-native';\nimport Contacts from 'react-native-contacts';\nimport {Button, Input} from 'react-native-elements';\nimport PhoneInput from 'react-native-phone-number-input';\n\nexport default function AddContact({navigation}) {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phoneNumber, setphoneNumber] = useState(['']);\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: 'Add  a new Contact',\n      headerBackTitle: 'Contacts',\n      headerStyle: {backgroundColor: '#1f9'},\n      headerTitleStyle: {color: '#050a9c'},\n      headTintColor: 'black',\n    });\n  }, [navigation]);\n\n  useEffect(() => {\n    if (phoneNumber[phoneNumber.length - 1].length > 0) {\n      setphoneNumber(prevState => [...prevState, '']);\n    }\n    try {\n      if (\n        phoneNumber[phoneNumber.length - 2].length === 0 &&\n        phoneNumber.length >= 2\n      ) {\n        setphoneNumber(prevState => {\n          const newState = prevState.slice();\n          newState.pop();\n          return newState;\n        });\n      }\n    } catch {}\n  }, [phoneNumber]);\n\n  function addContact() {\n    if ((!firstName && !lastName) || phoneNumber.length === 1) {\n      Alert.alert('Something went wrong', 'Please fill all the  fields');\n      return;\n    }\n    const myphoneNumber = phoneNumber.map(ph => {\n      return {label: 'mobile', number: ph};\n    });\n\n    const contactInfo = {\n      displayName: firstName + ' ' + lastName,\n      givenName: firstName + ' ' + lastName,\n      phoneNumber: myphoneNumber,\n    };\n    Contacts.addContact(contactInfo)\n      .then(() => navigation.navigate('Contacts'))\n      .catch(error => console.log(error));\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputContainer}>\n        <Input\n          label=\"First Name\"\n          placeholder=\" Enter First Name\"\n          value={firstName}\n          onChangeText={text => setFirstName(text)}\n        />\n        <Input\n          label=\"Last Name\"\n          placeholder=\" Enter Last Name\"\n          value={lastName}\n          onChangeText={text => setLastName(text)}\n        />\n      </View>\n      {phoneNumber.map((phoneNumber, index) => (\n        <View style={{...styles.inputContainer, marginVertical: 0}} key={index}>\n          <PhoneInput\n            label=\"Phone Number\"\n            style={styles.input}\n            defaultCode=\"CA\"\n            placeholder=\"Phone Number\"\n            keyboardType=\"number-pad\"\n            shadowOffset\n            value={phoneNumber}\n            onChangeText={text =>\n              setphoneNumber(prevState => {\n                const newState = prevState.slice();\n                newState[index] = text;\n                return newState;\n              })\n            }\n          />\n        </View>\n      ))}\n      <Button\n        onPress={() => addContact()}\n        title=\"Create Contact\"\n        buttonStyle={{\n          borderColor: 'rgba(78, 116, 289, 1)',\n          backgroundColor: '#1f9',\n        }}\n        type=\"outline\"\n        raised\n        titleStyle={{color: '#050a9c'}}\n        containerStyle={{\n          width: 200,\n          marginHorizontal: 50,\n          marginVertical: 10,\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  inputContainer: {\n    padding: 10,\n    margin: 10,\n  },\n  input: {\n    borderBottomWidth: 0.5,\n    borderBottomColor: 'gray',\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}