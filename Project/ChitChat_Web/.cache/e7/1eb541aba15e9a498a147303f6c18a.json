{"id":"JJem","dependencies":[{"name":"/Users/abdoulayendiaye/Desktop/ChitChat/Project/ChitChat_Web/package.json","includedInParent":true,"mtime":1648697020886},{"name":"/Users/abdoulayendiaye/Desktop/ChitChat/Project/ChitChat_Web/node_modules/@firebase/logger/dist/esm/package.json","includedInParent":true,"mtime":1648697017975}],"generated":{"js":"var $JJem$exports={};const $JJem$var$instances=[];var $JJem$export$LogLevel;!function(e){e[e.DEBUG=0]=\"DEBUG\",e[e.VERBOSE=1]=\"VERBOSE\",e[e.INFO=2]=\"INFO\",e[e.WARN=3]=\"WARN\",e[e.ERROR=4]=\"ERROR\",e[e.SILENT=5]=\"SILENT\"}($JJem$export$LogLevel||($JJem$export$LogLevel={},$JJem$exports.LogLevel=$JJem$export$LogLevel,$JJem$export$LogLevel));const $JJem$var$levelStringToEnum={debug:$JJem$export$LogLevel.DEBUG,verbose:$JJem$export$LogLevel.VERBOSE,info:$JJem$export$LogLevel.INFO,warn:$JJem$export$LogLevel.WARN,error:$JJem$export$LogLevel.ERROR,silent:$JJem$export$LogLevel.SILENT},$JJem$var$defaultLogLevel=$JJem$export$LogLevel.INFO,$JJem$var$ConsoleMethod={[$JJem$export$LogLevel.DEBUG]:\"log\",[$JJem$export$LogLevel.VERBOSE]:\"log\",[$JJem$export$LogLevel.INFO]:\"info\",[$JJem$export$LogLevel.WARN]:\"warn\",[$JJem$export$LogLevel.ERROR]:\"error\"},$JJem$var$defaultLogHandler=(e,o,...r)=>{if(o<e.logLevel)return;const $=(new Date).toISOString(),t=$JJem$var$ConsoleMethod[o];if(!t)throw new Error(`Attempted to log a message with an invalid logType (value: ${o})`);console[t](`[${$}]  ${e.name}:`,...r)};class $JJem$export$Logger{constructor(e){this.name=e,this._logLevel=$JJem$var$defaultLogLevel,this._logHandler=$JJem$var$defaultLogHandler,this._userLogHandler=null,$JJem$var$instances.push(this)}get logLevel(){return this._logLevel}set logLevel(e){if(!(e in $JJem$export$LogLevel))throw new TypeError(`Invalid value \"${e}\" assigned to \\`logLevel\\``);this._logLevel=e}setLogLevel(e){this._logLevel=\"string\"==typeof e?$JJem$var$levelStringToEnum[e]:e}get logHandler(){return this._logHandler}set logHandler(e){if(\"function\"!=typeof e)throw new TypeError(\"Value assigned to `logHandler` must be a function\");this._logHandler=e}get userLogHandler(){return this._userLogHandler}set userLogHandler(e){this._userLogHandler=e}debug(...e){this._userLogHandler&&this._userLogHandler(this,$JJem$export$LogLevel.DEBUG,...e),this._logHandler(this,$JJem$export$LogLevel.DEBUG,...e)}log(...e){this._userLogHandler&&this._userLogHandler(this,$JJem$export$LogLevel.VERBOSE,...e),this._logHandler(this,$JJem$export$LogLevel.VERBOSE,...e)}info(...e){this._userLogHandler&&this._userLogHandler(this,$JJem$export$LogLevel.INFO,...e),this._logHandler(this,$JJem$export$LogLevel.INFO,...e)}warn(...e){this._userLogHandler&&this._userLogHandler(this,$JJem$export$LogLevel.WARN,...e),this._logHandler(this,$JJem$export$LogLevel.WARN,...e)}error(...e){this._userLogHandler&&this._userLogHandler(this,$JJem$export$LogLevel.ERROR,...e),this._logHandler(this,$JJem$export$LogLevel.ERROR,...e)}}function $JJem$export$setLogLevel(e){$JJem$var$instances.forEach(o=>{o.setLogLevel(e)})}function $JJem$export$setUserLogHandler(e,o){for(const r of $JJem$var$instances){let $=null;o&&o.level&&($=$JJem$var$levelStringToEnum[o.level]),r.userLogHandler=null===e?null:(o,r,...t)=>{const l=t.map(e=>{if(null==e)return null;if(\"string\"==typeof e)return e;if(\"number\"==typeof e||\"boolean\"==typeof e)return e.toString();if(e instanceof Error)return e.message;try{return JSON.stringify(e)}catch(o){return null}}).filter(e=>e).join(\" \");r>=(null!=$?$:o.logLevel)&&e({level:$JJem$export$LogLevel[r].toLowerCase(),message:l,args:t,type:o.name})}}}$JJem$exports.setUserLogHandler=$JJem$export$setUserLogHandler,$JJem$exports.setLogLevel=$JJem$export$setLogLevel,$JJem$exports.Logger=$JJem$export$Logger,$JJem$exports.LogLevel=$JJem$export$LogLevel;"},"sourceMaps":null,"error":null,"hash":"f39e4688943d31107cf7ca18d1ba334e","cacheData":{"env":{},"imports":{},"exports":{"LogLevel":"$JJem$export$LogLevel","Logger":"$JJem$export$Logger","setLogLevel":"$JJem$export$setLogLevel","setUserLogHandler":"$JJem$export$setUserLogHandler"},"wildcards":[],"sideEffects":true,"isES6Module":true}}