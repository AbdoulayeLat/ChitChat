{"version":3,"sources":["utils/Colors.js","firebase.js","screens/HomeScreen.js","screens/Chat/ChatScreen.js","screens/RegistrationScreen.js","screens/Profile.js","screens/Chat/Contact.js","screens/Main.js","App.js","assets/img/Logo.png","utils/Images/profilepicture.png"],"names":["Colors","Primary","Secondary","Warning","BLUE","ORANGE","GREEN","RED","BLACK","SILVER","WHITE","GREY","WHITE_GREY","DARK_GREY","LIGHT_BLACK","DARK_RED","SEMI_TRANSPARENT","LIGHT_RED","YELLOW","LIGHT_GREY","PALE_YELLOW","DARK_BLUE","LIGHT_BLUE","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","getAuth","firestore","getFirestore","storage","getStorage","getDatabase","getApp","styles","StyleSheet","create","homeScreen","backgroundColor","flex","alignItems","loginView","height","width","borderRadius","marginTop","loginText","color","fontSize","fontWeight","textInput","marginBottom","borderWidth","borderColor","textAlign","textInfo","btnOTP","btnLogin","HomeScreen","navigation","recaptchaVerifier","React","useRef","useState","options","verificationId","setVerificationId","phoneNumber","addPhoneNumber","otp","setOTP","setModalVisible","View","style","Image","source","require","Text","TextInput","placeholder","onChangeText","text","replace","Pressable","onPress","a","async","phoneProvider","PhoneAuthProvider","verifyPhoneNumber","current","alert","message","GetOTP","padding","ref","firebaseConfig","attemptInvisibleVerification","androidHardwareAccelerationDisabled","credential","signInWithCredential","token","currentUser","uid","userRef","doc","runTransaction","transaction","get","exists","paramKey","paramToken","navigate","console","log","checkOTP","styles1","view","ChatScreen","route","messages","setMessages","friendName","imageURL","setImageURL","friendPhoneNumber","params","storageRef","signOutNow","signOut","then","catch","error","getDownloadURL","url","useLayoutEffect","setOptions","headerRight","TouchableOpacity","marginRight","title","headerStyle","useEffect","q","query","collection","toString","orderBy","unsubscribe","onSnapshot","snapshot","docs","map","_id","data","createdAt","toDate","user","onSend","useCallback","setDoc","contacts","addDoc","showAvatarForEveryMessage","isLoadingEarlier","showUserAvatar","renderInputToolbar","props","containerStyle","marginHorizontal","justifyContent","customtInputToolbar","avatar","RegistrationScreen","firstName","setFirstname","lastName","setLastname","email","setEmail","selectedImage","setSelectedImage","image","getURL","writeToDB","UID","profilepictureURL","uri","localUri","container","signUpView","textSignup","ImagePicker","granted","allowsEditing","pickerResult","cancelled","openImagePickerAsync","profilepicture","imageInfo","signUpTitle","placeholderTextColor","keyboardType","btnRegister","imageName","fetch","response","blob","uploadBytes","uploadProfile","alignSelf","resizeMode","marginVertical","pictureView","infoView","optionView","name","editInfo","status","Profile","useFonts","Roboto_400Regular","Roboto_500Medium","getDoc","docSnap","SafeAreaView","btnChat","infoText","Contact","setPhoneNumber","userPhoneNumber","Alert","Drawer","createDrawerNavigator","Main","dimensions","useWindowDimensions","Navigator","screenOptions","drawerType","headerShown","drawerStyle","drawerActiveTintColor","drawerInactiveTintColor","drawerLabelStyle","Screen","component","drawerIcon","config","Feather","size","AntDesign","drawerItemStyle","display","headerTitleStyle","Stack","createStackNavigator","App","initialRouteName","setInitialRouteName","onAuthStateChanged","NavigationContainer","module","exports"],"mappings":"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","file":"static/js/app.ef436f24.chunk.js","sourcesContent":["const Colors =\n{\n    Primary : '#1A1D53',\n    Secondary : '#09D3AF',\n    Warning: '#E71616',\n    BLUE: '#3543bf',\n    ORANGE: '#fe7d32',\n    GREEN: '#30a960',\n    RED: '#f06159',\n    BLACK: '#0b0b0b',\n    SILVER: '#efefef',\n    WHITE: '#fff',\n    GREY: '#7e7e7e',\n    WHITE_GREY: '#d4d4d4',\n    DARK_GREY: '#555555',\n    LIGHT_BLACK: '#212121',\n    DARK_RED: '#c04d47',\n    SEMI_TRANSPARENT: 'rgba(0,0,0,0.5)',\n    LIGHT_RED: '#fef3ec',\n    YELLOW: '#fec72e',\n    LIGHT_GREY: '#a9a9a9',\n    PALE_YELLOW: '#fff6ef',\n    DARK_BLUE: '#2e68b2',\n    LIGHT_BLUE: '#EEEFF9',\n}\nexport default Colors;","import {initializeApp} from 'firebase/app';\nimport { getAuth, signInWithPhoneNumber } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from '@firebase/storage';\nimport { getDatabase } from '@firebase/database';\nimport firebase from 'firebase/compat/app';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAK9o-m9i97W--01XikQipHNUV4EQfdIM8\",\n  authDomain: \"chit-cae27.firebaseapp.com\",\n  projectId: \"chit-cae27\",\n  storageBucket: \"chit-cae27.appspot.com\",\n  messagingSenderId: \"749327233673\",\n  appId: \"1:749327233673:web:f182f17c238213d4320c58\",\n  measurementId: \"G-WT8ML4X9HT\"\n};\n\nlet firebaseApp\n\nif (firebase.apps.length === 0) {\n    firebaseApp = firebase.initializeApp(firebaseConfig)\n} else {\n    firebaseApp = firebase.app()\n}\n\nconst auth = getAuth();\nconst firestore = getFirestore();\nconst storage = getStorage();\nconst database = getDatabase();\n\nexport {auth, firestore, storage};","import {View, KeyboardAvoidingView, Text, Platform, TextInput, Modal, Pressable, StyleSheet, Image, Button} from 'react-native';\nimport React, {useState} from 'react';\nimport Colors from '../utils/Colors.js';\nimport { auth, firestore } from '../firebase.js';\nimport { getApp } from 'firebase/app';\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport { getAuth, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { collection, query, where, getDocs, doc, runTransaction } from \"firebase/firestore\";\n\nconst app = getApp();\nconst HomeScreen = ({navigation}) => {\n  const recaptchaVerifier = React.useRef(null);\n  const [confirmationResult, setConfirmationResult] = React.useState();\n  const firebaseConfig = app ? app.options : undefined;\n  const attemptInvisibleVerification = false;\n  const [verificationId, setVerificationId] = React.useState();\n  \n  const [phoneNumber, addPhoneNumber] = React.useState('+1');\n  const [otp, setOTP] = React.useState('')\n  const [modalVisible, setModalVisible] = useState(false);\n  \n  const GetOTP = async () => {\n    if(phoneNumber && phoneNumber.length > 9){\n      // The FirebaseRecaptchaVerifierModal ref implements the\n      // FirebaseAuthApplicationVerifier interface and can be\n      // passed directly to `verifyPhoneNumber`.\n      try {\n        const phoneProvider = new PhoneAuthProvider(auth);\n        const verificationId = await phoneProvider.verifyPhoneNumber(\n          phoneNumber,\n          recaptchaVerifier.current\n        );\n        setVerificationId(verificationId);\n        setModalVisible(true);\n      } catch (err) {\n        alert(err.message);\n      }\n    }   \n    else{\n      alert(\"Please enter a 10 digit number\");\n    }\n  }\n\n  const checkOTP = async () => {\n    try {\n      const credential = PhoneAuthProvider.credential(\n        verificationId,\n        otp\n      );\n      await signInWithCredential(auth, credential);\n      setModalVisible(false)\n      const token = auth.currentUser.uid;\n      const userRef = doc(firestore, \"users\", phoneNumber);\n\n      const readUser = await runTransaction(firestore, async (transaction) => {\n        const user = await transaction.get(userRef);\n        if (!user.exists()) {\n          navigation.navigate('Registration', {\n            paramKey: phoneNumber,\n            paramToken: token\n          })\n        }else{\n          navigation.replace('Main', {\n            paramKey: phoneNumber,\n            paramToken: token\n          })\n        }\n      });\n    } catch (err) {\n      setModalVisible(false)\n      console.log(err.message);\n    }\n  }\n\n  \n  return(\n    <View style={styles.homeScreen}>\n      <View style={styles.loginView}>\n        <Image source={require('../assets/img/Logo.png')} style={{width:200, height:200, marginTop:20, borderRadius:40}} />\n\n        <Text style={styles.loginText}>WELCOME👋🏽</Text>\n        <Text style={styles.textInfo}>Enter Your Phone Number:</Text>\n        <TextInput style={styles.textInput} placeholder={'+11234567899'}\n          onChangeText={(text) => addPhoneNumber(text.replace(/ /g, ''))}/>\n        <Text style={{color:'grey', fontSize:15}} >*You will receive a code on your phone number</Text>\n        <Pressable style={styles.btnOTP} onPress = {() => GetOTP()}>\n          <Text style={{color:Colors.Secondary, fontWeight:'700', fontSize:20, padding:10}}>Get OTP</Text>\n        </Pressable>\n\n        <FirebaseRecaptchaVerifierModal\n            ref={recaptchaVerifier}\n            firebaseConfig={app.options}\n            attemptInvisibleVerification\n            androidHardwareAccelerationDisabled\n        />\n\n        <TextInput style={styles.textInput} placeholder={'Enter your One-Time-Password'}\n          onChangeText={(text) => setOTP(text)}/>\n        <Pressable style={styles.btnLogin} onPress = {() => checkOTP()} >\n          <Text style={{color:Colors.Secondary, fontWeight:'700', fontSize:20, padding:10}}>LOGIN</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n    homeScreen:{\n        backgroundColor: Colors.Primary,\n        flex:1,\n        alignItems:'center',\n    },\n    loginView:{\n      backgroundColor: Colors.Secondary,\n      height: '80%',\n      width:'35%',\n      borderRadius: 40,\n      alignItems:'center',\n      marginTop:'3%'\n    },\n    loginText:{\n      color: Colors.Primary,\n      fontSize: 40,\n      fontWeight: 'bold',\n      marginTop: 20,\n    },\n    textInput:{\n      marginTop: 5,\n      marginBottom:5,\n      borderWidth:2,\n      borderRadius:10,\n      borderColor: Colors.Primary,\n      fontSize: 20,\n      height: 40,\n      width: 300,\n      textAlign: 'center',\n    },\n    textInfo:{\n      color: Colors.Primary,\n      fontSize: 20,\n      marginTop: 18,\n      fontWeight:'bold',\n    },\n    btnOTP:{\n      backgroundColor: Colors.Primary,\n      borderRadius:10,\n      marginTop: 10,\n      marginBottom: 5\n    },\n    btnLogin:{\n      backgroundColor: Colors.Primary,\n      borderRadius:10,\n      marginTop: 5\n    },\n});\n\nexport default HomeScreen;\n","import React, { useCallback, useState, useLayoutEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';\nimport { auth, firestore, storage } from '../../firebase';\nimport { signOut } from 'firebase/auth';\nimport { collection, addDoc, doc, setDoc, getDoc, query, orderBy, onSnapshot, where } from 'firebase/firestore';\nimport { ref, getDownloadURL } from '@firebase/storage';\nimport { GiftedChat, InputToolbar } from 'react-native-gifted-chat';\nimport Colors from '../../utils/Colors';\nimport { useEffect } from 'react';\n\nconst ChatScreen = ({ route, navigation }) => {\n    const [messages, setMessages] = useState([]);\n    const [friendName, setFriendName] = useState();\n    const token = auth.currentUser.uid;\n    const [imageURL, setImageURL] = React.useState();\n    const phoneNumber = auth.currentUser.phoneNumber;\n    const friendPhoneNumber = route.params.friendPhoneNumber;\n    const [friendUID, setFrienUID] = React.useState();\n    const storageRef = ref(storage, 'images/ProfilePictures/'+token);\n\n    const signOutNow = () => {\n      signOut(auth).then(() => {\n          // Sign-out successful.\n          navigation.replace('Home');\n      }).catch((error) => {\n          // An error happened.\n      });\n    }\n\n    getDownloadURL(storageRef)\n    .then((url) => {\n      setImageURL(url)\n    })\n    .catch((error) => {\n      console.log(error)\n    });\n    \n    useLayoutEffect(() => {\n        navigation.setOptions({\n          headerRight: () => (\n            <TouchableOpacity style={{\n                marginRight: 10\n            }}\n                onPress={signOutNow}\n            >\n                <Text style={{color: 'white', fontWeight:'bold', fontSize:18}}>Logout</Text>\n            </TouchableOpacity>\n          ),\n          title: friendPhoneNumber,\n          headerStyle:{\n            backgroundColor: Colors.Primary,\n          }\n        })\n    }, [navigation]);\n      \n    useEffect(() => {\n      const q = query(collection(firestore, 'chats/'+phoneNumber+\"/\"+friendPhoneNumber.toString()), orderBy('createdAt', 'desc'));\n      const unsubscribe = onSnapshot(q, (snapshot) => setMessages(\n          snapshot.docs.map(doc => ({\n              _id: doc.data()._id,\n              createdAt: doc.data().createdAt.toDate(),\n              text: doc.data().text,\n              user: doc.data().user,\n          }))\n      ));\n      return () => {\n        unsubscribe();\n      };\n    })\n\n    const onSend = useCallback(async (messages = [], phoneNumber, friendName, friendPhoneNumber) => {\n        const { _id, createdAt, text, user} = messages[0]\n        await setDoc(doc(firestore, 'chats/'+phoneNumber), {\n          uid: auth.currentUser.uid,\n          contacts: [{friendName, friendPhoneNumber}]\n        });\n        addDoc(collection(firestore, 'chats/'+phoneNumber+\"/\"+friendPhoneNumber), { _id, createdAt,  text, user });\n        addDoc(collection(firestore, 'chats/'+friendPhoneNumber+\"/\"+phoneNumber), { _id, createdAt,  text, user });\n    }, []);\n\n  const customtInputToolbar = props => {\n    return (\n      <InputToolbar\n        {...props}\n        containerStyle={{\n          borderRadius: 10,\n          marginHorizontal: 5,\n          justifyContent: 'center',\n        }}\n      />\n    );\n  };\n  \n\n  return (\n    <View style={styles1.view}>\n      <GiftedChat\n          messages={messages}\n          showAvatarForEveryMessage={true}\n          onSend={messages => onSend(messages, phoneNumber, friendName, friendPhoneNumber)}\n          isLoadingEarlier={true}\n          showUserAvatar={true}\n          placeholder={\"Chat Away...\"}\n          renderInputToolbar={props => customtInputToolbar(props)}\n          user={{\n              _id: auth?.currentUser?.uid,\n              avatar: imageURL\n          }}\n      />\n    </View>\n  );\n}\n\nconst styles1 = StyleSheet.create({\n  view:{\n    backgroundColor: Colors.Primary,\n    flex:1\n  }\n});\n\nexport default ChatScreen","import { StyleSheet, Text, View, Image, TouchableOpacity, TextInput, Pressable } from 'react-native';\nimport React from 'react';\nimport Colors from '../utils/Colors';\nimport * as ImagePicker from 'expo-image-picker';\nimport { auth, firestore, storage } from '../firebase.js';\nimport { initializeApp, getApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { collection, addDoc, doc, setDoc } from \"firebase/firestore\"; \nimport { ref, uploadBytes, getDownloadURL } from '@firebase/storage';\nimport { async } from '@firebase/util';\n\nconst RegistrationScreen = ({route, navigation}) => {\n  const [firstName, setFirstname] = React.useState();\n  const [lastName, setLastname] = React.useState();\n  const [email, setEmail] = React.useState();\n  const [password, setPassword] = React.useState();\n  const [selectedImage, setSelectedImage] = React.useState(null);\n  const phoneNumber = auth.currentUser.phoneNumber;\n  const token = auth.currentUser.uid;\n  var url = \"\";\n  var image = require('../utils/Images/profilepicture.png');\n  \n  const app = getApp();\n  const storageRef = ref(storage, 'images/ProfilePictures/'+token);\n  \n  \n  let uploadProfile = async (uri, imageName) => {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n\n    uploadBytes(storageRef, blob).then((snapshot) => {\n      getURL();\n    });\n  }\n\n  // Image Pick\n  let openImagePickerAsync = async () => {\n    let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    \n    if (permissionResult.granted === false) {\n      alert(\"Permission to access camera roll is required!\");\n      return;\n    }\n    let pickerResult = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true\n    });\n    if (pickerResult.cancelled === true) {\n      return;\n    }\n    setSelectedImage({ localUri: pickerResult.uri }); \n  }\n\n  let getURL = async () => {\n    getDownloadURL(storageRef).then((url) => {\n      writeToDB(url);\n    });\n  }\n\n\n  let writeToDB = async (url) => {\n    try {\n        await setDoc(doc(firestore, \"users\", phoneNumber), {\n          UID: token,\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          phoneNumber: phoneNumber,\n          profilepictureURL: url,\n        });\n        navigation.replace('Main', { \n            paramKey: phoneNumber,\n            paramToken: token\n        });\n    } catch (e) {\n        console.error(\"Error adding document: \", e);\n        alert(\"Something went wrong! Please try again.🤕\")\n      }\n  }\n  \n  if (selectedImage !== null) {\n    image = { uri: selectedImage.localUri }\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.signUpView}>\n        <Text style={styles.textSignup}>Create Your Profile😄</Text>\n        <TouchableOpacity onPress={() => openImagePickerAsync() }>\n          <Image style={styles.profilepicture} source={image}/>\n        </TouchableOpacity>\n        <Text style={styles.imageInfo}>*Click the Image to Pick your Profile Picture</Text>\n        \n        <Text style={styles.signUpTitle}>First Name</Text>\n        <TextInput  style={styles.textInput} onChangeText={text => setFirstname(text)} placeholder={\"Chit Chat\"} placeholderTextColor = {Colors.WHITE}/>\n        <Text style={styles.signUpTitle}>Last Name</Text>\n        <TextInput  style={styles.textInput} onChangeText={text => setLastname(text)} placeholder={\"Chit Chat\"} placeholderTextColor = {Colors.WHITE}/>\n        <Text style={styles.signUpTitle}>Email</Text>\n        <TextInput style={styles.textInput} onChangeText={text => setEmail(text)} placeholderTextColor = {Colors.WHITE} placeholder={\"example@email.com\"} keyboardType={\"email-address\"}/>\n        <Pressable style={styles.btnRegister} onPress={() => uploadProfile(selectedImage.localUri, token+\" Profile Picture\")}>\n            <Text style={{color:Colors.Primary, fontWeight:'700', fontSize:20, padding:10}}>Create My Account ✅</Text>\n        </Pressable>\n      </View>\n    </View>\n  )\n}\n\nexport default RegistrationScreen\n\nconst styles = StyleSheet.create({\n  container:{\n    alignItems: 'center',\n    flex:1,\n    backgroundColor: Colors.Secondary,\n  },\n  signUpView:{\n    backgroundColor: Colors.Primary,\n    height: '85%',\n    width:'55%',\n    borderRadius: 40,\n    alignItems:'center',\n    marginTop:'3%'\n  },\n  btnRegister:{\n    backgroundColor: Colors.Secondary,\n    borderRadius:10,\n    marginTop: 5\n  },\n  signUpTitle:{\n    fontSize: 20,\n    color: Colors.Secondary,\n    fontWeight: '600',\n  },\n  textSignup:{\n      fontSize: 35,\n      color: Colors.Secondary,\n      alignSelf: 'center',\n      marginBottom: 15,\n      fontWeight: 'bold'\n  },\n  profilepicture:{\n    resizeMode: 'contain',\n    height: 200,\n    width: 200,\n    borderRadius: 40,\n  },\n  imageInfo:{\n    color: Colors.GREY,\n    marginBottom: 10,\n  },\n  textInput:{\n    marginVertical: 15,\n    borderWidth:2,\n    borderRadius:10,\n    borderColor: Colors.WHITE_GREY,\n    color: Colors.Secondary,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n})","import React, {useState, useEffect} from 'react';\nimport {View, Text, StyleSheet, TextInput, Image, TouchableOpacity} from 'react-native';\nimport Colors from '../utils/Colors';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { auth, storage, firestore } from '../firebase';\nimport { ref, getDownloadURL } from '@firebase/storage';\nimport { collection, doc, getDoc } from \"firebase/firestore\"; \nimport { useFonts } from 'expo-font';\nimport { Roboto_400Regular, Roboto_500Medium} from '@expo-google-fonts/roboto';\nimport AppLoading from 'expo-app-loading';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nconst Profile = ({ route, navigation}) => {\n  const user = auth.currentUser;\n  const token = user.uid;\n  const [firstName, setFirstname] = React.useState();\n  const [lastName, setLastname] = React.useState();\n  const phoneNumber = auth.currentUser.phoneNumber;\n  const [imageURL, setImageURL] = React.useState();\n  const storageRef = ref(storage, 'images/ProfilePictures/'+token);\n\n  // Load Fonts\n  let [fontsLoaded] = useFonts({\n    Roboto_400Regular,\n    Roboto_500Medium,\n  });\n\n  if(!fontsLoaded){\n    return <AppLoading/>;\n  }\n\n  //Get Data from Firestore DBf\n  getDoc(doc(firestore, \"users\", phoneNumber)).then(docSnap => {\n    if (docSnap.exists()) {\n      setFirstname(docSnap.get(\"firstName\"))\n      setLastname(docSnap.get(\"lastName\"))\n    } else {\n      console.log(\"No such document!\");\n    }\n  })\n\n  //Download Profile Picture from Firebase Storage\n  getDownloadURL(storageRef)\n  .then((url) => {\n    setImageURL(url)\n  })\n  .catch((error) => {\n    console.log(error)\n  });\n\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.pictureView}>\n        <View style={styles.infoView}>\n          <Image style={styles.profilepicture} source={{uri: imageURL}} />\n          <Text style={styles.name}>{firstName + \" \" + lastName}</Text>\n          <Text style={styles.phoneNumber}>{phoneNumber}</Text>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor:  Colors.Primary,\n  },\n  profilepicture:{ \n    resizeMode: 'contain',\n    height: 140,\n    width: 140,\n    borderRadius: 40,\n    marginVertical: 20,\n  },\n  pictureView:{\n    alignItems: 'center'\n  },\n  infoView:{\n    backgroundColor: Colors.Secondary,\n    alignItems:'center',\n    borderRadius: 30,\n    width: \"80%\",\n    height: 255,\n    marginTop: 15,\n  },\n  optionView:{\n    backgroundColor: Colors.Secondary,\n    alignItems:'center',\n    borderRadius: 30,\n    width: \"90%\",\n    height: 365,\n    marginTop: 20,\n  },\n  name:{\n    fontSize: 30,\n    color: Colors.BLACK,\n\n  },\n  phoneNumber:{\n    fontSize: 20,\n    color: Colors.LIGHT_BLACK,\n\n    marginTop: 5,\n  },\n  editInfo:{\n    fontSize:15,\n    marginVertical:10,\n    color: Colors.LIGHT_BLACK,\n  },\n  status:{\n    color: Colors.BLACK\n  },\n});\n\nexport default Profile;","import { View, Text, TextInput, StyleSheet, Keyboard, Alert, Pressable, TouchableWithoutFeedback } from 'react-native';\nimport React, {useEffect} from 'react';\nimport Colors from '../../utils/Colors';\nimport {collection, addDoc, doc, setDoc, getDocs, getDoc, query, orderBy, onSnapshot, where } from 'firebase/firestore';\nimport { auth, firestore, storage } from '../../firebase';\nimport { async } from '@firebase/util';\n\nconst Contact = ({route,navigation}) => {\n  const [phoneNumber, setPhoneNumber] = React.useState('+1');\n  const userPhoneNumber = auth.currentUser.phoneNumber;\n\n  const checkUser = () => {\n    //Get Data from Firestore DBf\n    getDoc(doc(firestore, \"users\", phoneNumber)).then(docSnap => {\n      if (docSnap.exists()) {\n        navigation.navigate('ChatScreen', {\n          friendPhoneNumber: phoneNumber,\n          userPhoneNumber: userPhoneNumber,\n        })\n      } else {\n        Alert.alert(\"This phone number hasn't registered to ChitChat yet! Invite them😉\")\n      }\n    })\n  }\n  \n  return (\n    <View style={styles.container}>\n      <Text style={styles.infoText}>Who do you want to chat with:</Text>\n      <TextInput style={styles.textInput} keyboardType={'phone-pad'} placeholder='+11234567899' onChangeText={(text) => setPhoneNumber(text.replace(/ /g, ''))}/>\n      <Pressable style={styles.btnChat} onPress={() => checkUser()}>\n        <Text style={{color:Colors.Primary, fontWeight:'700', fontSize:20, padding:10}}>Enter Chat</Text>\n      </Pressable>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container:{\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Colors.Primary,\n    flex:1\n  },\n  btnChat:{\n    backgroundColor: Colors.Secondary,\n    borderRadius:10,\n    marginTop: 5\n  },\n  textInput:{\n    marginTop: 5,\n    marginBottom:5,\n    borderWidth:2,\n    borderRadius:10,\n    backgroundColor: Colors.SILVER,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n  infoText:{\n    color: Colors.Secondary,\n    fontSize: 20,\n    marginTop: 50,\n  },\n});\n\nexport default Contact;","import { View, Text, Platform, useWindowDimensions } from 'react-native';\nimport React from 'react';\nimport Profile from './Profile';\nimport ChatScreen from './Chat/ChatScreen';\nimport Contact from './Chat/Contact';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Colors from '../utils/Colors';\nimport { auth } from '../firebase';\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\n\nconst Drawer = createDrawerNavigator();\nconst Main = ({route, navigation}) => {\n    // const phoneNumber = auth.currentUser.phoneNumber;\n    // const token = auth.currentUser.uid;\n    const dimensions = useWindowDimensions();\n  return (\n    <Drawer.Navigator\n      screenOptions={{\n        drawerType: dimensions.width >= 768 ? 'permanent' : 'back',\n        headerShown: false,\n        drawerStyle:{\n            backgroundColor: Colors.Secondary,\n            width: \"20%\"\n        },\n        drawerActiveTintColor: Colors.Primary,\n        drawerInactiveTintColor: Colors.DARK_GREY,\n        drawerLabelStyle:{\n            color: Colors.Primary\n        }\n      }}\n    >   \n        <Drawer.Screen name=\"Profile\" component={Profile} options={{\n            drawerLabelStyle:{\n                fontSize: 20,\n                fontWeight:'bold',\n                alignSelf:'center'\n            },\n            drawerIcon: config => <Feather name=\"user\" size={30} color={Colors.Primary} />\n        }} />\n        <Drawer.Screen name=\"Contact\" component={Contact} options={{\n            drawerLabelStyle:{\n                fontSize: 20,\n                fontWeight:'bold',\n                alignSelf:'center'\n            },\n            drawerIcon: config => <AntDesign name=\"contacts\" size={30} color={Colors.Primary} />,\n        }} />\n        <Drawer.Screen name=\"ChatScreen\" component={ChatScreen} options={{\n            drawerItemStyle:{\n                display: 'none'\n            },\n            headerShown: true,\n            headerTitleStyle:{\n                color:'white',\n                fontWeight:'bold'\n            }\n        }} />\n    </Drawer.Navigator>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, useWindowDimensions } from 'react-native';\nimport Colors from './utils/Colors';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from './screens/HomeScreen';\nimport ChatScreen from './screens/Chat/ChatScreen';\nimport RegistrationScreen from './screens/RegistrationScreen';\nimport Main from './screens/Main';\nimport {auth} from './firebase.js'\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [initialRouteName, setInitialRouteName] = React.useState(\"Home\")\n  \n  auth.onAuthStateChanged(user => {\n    if (user){\n     setInitialRouteName(\"Main\")\n    }\n  })\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName = {initialRouteName}>\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{headerShown: false}}\n        />\n        <Stack.Screen\n          name=\"Registration\"\n          component={RegistrationScreen}\n          options={{headerShown: false}}\n        />\n        <Stack.Screen\n          name=\"Main\"\n          component={Main}\n          options={{headerShown: false}}\n        />\n      </Stack.Navigator> \n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  \n});\n","module.exports = __webpack_public_path__ + \"static/media/Logo.23c9507f.png\";","module.exports = __webpack_public_path__ + \"static/media/profilepicture.6e82b654.png\";"],"sourceRoot":""}