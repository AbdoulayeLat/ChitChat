{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import View from\"react-native-web/dist/exports/View\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Modal from\"react-native-web/dist/exports/Modal\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Image from\"react-native-web/dist/exports/Image\";import Button from\"react-native-web/dist/exports/Button\";import React,{useState}from'react';import Colors from\"../utils/Colors.js\";import{auth,firestore}from\"../firebase.js\";import{getApp}from'firebase/app';import{FirebaseRecaptchaVerifierModal,FirebaseRecaptchaBanner}from'expo-firebase-recaptcha';import{getAuth,PhoneAuthProvider,signInWithCredential}from'firebase/auth';import{async}from'@firebase/util';import{collection,query,where,getDocs,doc,runTransaction}from\"firebase/firestore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var app=getApp();var HomeScreen=function HomeScreen(_ref){var navigation=_ref.navigation;var recaptchaVerifier=React.useRef(null);var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),confirmationResult=_React$useState2[0],setConfirmationResult=_React$useState2[1];var firebaseConfig=app?app.options:undefined;var attemptInvisibleVerification=false;var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),verificationId=_React$useState4[0],setVerificationId=_React$useState4[1];var _React$useState5=React.useState('+1'),_React$useState6=_slicedToArray(_React$useState5,2),phoneNumber=_React$useState6[0],addPhoneNumber=_React$useState6[1];var _React$useState7=React.useState(''),_React$useState8=_slicedToArray(_React$useState7,2),otp=_React$useState8[0],setOTP=_React$useState8[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalVisible=_useState2[0],setModalVisible=_useState2[1];var GetOTP=function GetOTP(){var phoneProvider,_verificationId;return _regeneratorRuntime.async(function GetOTP$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(phoneNumber&&phoneNumber.length>9)){_context.next=15;break;}_context.prev=1;phoneProvider=new PhoneAuthProvider(auth);_context.next=5;return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber,recaptchaVerifier.current));case 5:_verificationId=_context.sent;setVerificationId(_verificationId);setModalVisible(true);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);alert(_context.t0.message);case 13:_context.next=16;break;case 15:alert(\"Please enter a 10 digit number\");case 16:case\"end\":return _context.stop();}}},null,null,[[1,10]],Promise);};var checkOTP=function checkOTP(){var credential,token,userRef,readUser;return _regeneratorRuntime.async(function checkOTP$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;credential=PhoneAuthProvider.credential(verificationId,otp);_context3.next=4;return _regeneratorRuntime.awrap(signInWithCredential(auth,credential));case 4:setModalVisible(false);token=auth.currentUser.uid;userRef=doc(firestore,\"users\",phoneNumber);_context3.next=9;return _regeneratorRuntime.awrap(runTransaction(firestore,function _callee(transaction){var user;return _regeneratorRuntime.async(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(transaction.get(userRef));case 2:user=_context2.sent;if(!user.exists()){navigation.navigate('Registration',{paramKey:phoneNumber,paramToken:token});}else{navigation.replace('Main',{paramKey:phoneNumber,paramToken:token});}case 4:case\"end\":return _context2.stop();}}},null,null,null,Promise);}));case 9:readUser=_context3.sent;_context3.next=16;break;case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](0);setModalVisible(false);console.log(_context3.t0.message);case 16:case\"end\":return _context3.stop();}}},null,null,[[0,12]],Promise);};return _jsx(View,{style:styles.homeScreen,children:_jsxs(View,{style:styles.loginView,children:[_jsx(Image,{source:require(\"../assets/img/Logo.png\"),style:{width:200,height:200,marginTop:20,borderRadius:40}}),_jsx(Text,{style:styles.loginText,children:\"WELCOME\\uD83D\\uDC4B\\uD83C\\uDFFD\"}),_jsx(Text,{style:styles.textInfo,children:\"Enter Your Phone Number:\"}),_jsx(TextInput,{style:styles.textInput,placeholder:'+11234567899',onChangeText:function onChangeText(text){return addPhoneNumber(text.replace(/ /g,''));}}),_jsx(Text,{style:{color:'grey',fontSize:15},children:\"*You will receive a code on your phone number\"}),_jsx(Pressable,{style:styles.btnOTP,onPress:function onPress(){return GetOTP();},children:_jsx(Text,{style:{color:Colors.Secondary,fontWeight:'700',fontSize:20,padding:10},children:\"Get OTP\"})}),_jsx(FirebaseRecaptchaVerifierModal,{ref:recaptchaVerifier,firebaseConfig:app.options,attemptInvisibleVerification:true,androidHardwareAccelerationDisabled:true}),_jsx(TextInput,{style:styles.textInput,placeholder:'Enter your One-Time-Password',onChangeText:function onChangeText(text){return setOTP(text);}}),_jsx(Pressable,{style:styles.btnLogin,onPress:function onPress(){return checkOTP();},children:_jsx(Text,{style:{color:Colors.Secondary,fontWeight:'700',fontSize:20,padding:10},children:\"LOGIN\"})})]})});};var styles=StyleSheet.create({homeScreen:{backgroundColor:Colors.Primary,flex:1,alignItems:'center'},loginView:{backgroundColor:Colors.Secondary,height:'80%',width:'35%',borderRadius:40,alignItems:'center',marginTop:'3%'},loginText:{color:Colors.Primary,fontSize:40,fontWeight:'bold',marginTop:20},textInput:{marginTop:5,marginBottom:5,borderWidth:2,borderRadius:10,borderColor:Colors.Primary,fontSize:20,height:40,width:300,textAlign:'center'},textInfo:{color:Colors.Primary,fontSize:20,marginTop:18,fontWeight:'bold'},btnOTP:{backgroundColor:Colors.Primary,borderRadius:10,marginTop:10,marginBottom:5},btnLogin:{backgroundColor:Colors.Primary,borderRadius:10,marginTop:5}});export default HomeScreen;","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/HomeScreen.js"],"names":["React","useState","Colors","auth","firestore","getApp","FirebaseRecaptchaVerifierModal","FirebaseRecaptchaBanner","getAuth","PhoneAuthProvider","signInWithCredential","async","collection","query","where","getDocs","doc","runTransaction","app","HomeScreen","navigation","recaptchaVerifier","useRef","confirmationResult","setConfirmationResult","firebaseConfig","options","undefined","attemptInvisibleVerification","verificationId","setVerificationId","phoneNumber","addPhoneNumber","otp","setOTP","modalVisible","setModalVisible","GetOTP","length","phoneProvider","verifyPhoneNumber","current","alert","message","checkOTP","credential","token","currentUser","uid","userRef","transaction","get","user","exists","navigate","paramKey","paramToken","replace","readUser","console","log","styles","homeScreen","loginView","require","width","height","marginTop","borderRadius","loginText","textInfo","textInput","text","color","fontSize","btnOTP","Secondary","fontWeight","padding","btnLogin","StyleSheet","create","backgroundColor","Primary","flex","alignItems","marginBottom","borderWidth","borderColor","textAlign"],"mappings":"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","sourcesContent":["import {View, KeyboardAvoidingView, Text, Platform, TextInput, Modal, Pressable, StyleSheet, Image, Button} from 'react-native';\nimport React, {useState} from 'react';\nimport Colors from '../utils/Colors.js';\nimport { auth, firestore } from '../firebase.js';\nimport { getApp } from 'firebase/app';\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport { getAuth, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { collection, query, where, getDocs, doc, runTransaction } from \"firebase/firestore\";\n\nconst app = getApp();\nconst HomeScreen = ({navigation}) => {\n  const recaptchaVerifier = React.useRef(null);\n  const [confirmationResult, setConfirmationResult] = React.useState();\n  const firebaseConfig = app ? app.options : undefined;\n  const attemptInvisibleVerification = false;\n  const [verificationId, setVerificationId] = React.useState();\n  \n  const [phoneNumber, addPhoneNumber] = React.useState('+1');\n  const [otp, setOTP] = React.useState('')\n  const [modalVisible, setModalVisible] = useState(false);\n  \n  const GetOTP = async () => {\n    if(phoneNumber && phoneNumber.length > 9){\n      // The FirebaseRecaptchaVerifierModal ref implements the\n      // FirebaseAuthApplicationVerifier interface and can be\n      // passed directly to `verifyPhoneNumber`.\n      try {\n        const phoneProvider = new PhoneAuthProvider(auth);\n        const verificationId = await phoneProvider.verifyPhoneNumber(\n          phoneNumber,\n          recaptchaVerifier.current\n        );\n        setVerificationId(verificationId);\n        setModalVisible(true);\n      } catch (err) {\n        alert(err.message);\n      }\n    }   \n    else{\n      alert(\"Please enter a 10 digit number\");\n    }\n  }\n\n  const checkOTP = async () => {\n    try {\n      const credential = PhoneAuthProvider.credential(\n        verificationId,\n        otp\n      );\n      await signInWithCredential(auth, credential);\n      setModalVisible(false)\n      const token = auth.currentUser.uid;\n      const userRef = doc(firestore, \"users\", phoneNumber);\n\n      const readUser = await runTransaction(firestore, async (transaction) => {\n        const user = await transaction.get(userRef);\n        if (!user.exists()) {\n          navigation.navigate('Registration', {\n            paramKey: phoneNumber,\n            paramToken: token\n          })\n        }else{\n          navigation.replace('Main', {\n            paramKey: phoneNumber,\n            paramToken: token\n          })\n        }\n      });\n    } catch (err) {\n      setModalVisible(false)\n      console.log(err.message);\n    }\n  }\n\n  \n  return(\n    <View style={styles.homeScreen}>\n      <View style={styles.loginView}>\n        <Image source={require('../assets/img/Logo.png')} style={{width:200, height:200, marginTop:20, borderRadius:40}} />\n\n        <Text style={styles.loginText}>WELCOME👋🏽</Text>\n        <Text style={styles.textInfo}>Enter Your Phone Number:</Text>\n        <TextInput style={styles.textInput} placeholder={'+11234567899'}\n          onChangeText={(text) => addPhoneNumber(text.replace(/ /g, ''))}/>\n        <Text style={{color:'grey', fontSize:15}} >*You will receive a code on your phone number</Text>\n        <Pressable style={styles.btnOTP} onPress = {() => GetOTP()}>\n          <Text style={{color:Colors.Secondary, fontWeight:'700', fontSize:20, padding:10}}>Get OTP</Text>\n        </Pressable>\n\n        <FirebaseRecaptchaVerifierModal\n            ref={recaptchaVerifier}\n            firebaseConfig={app.options}\n            attemptInvisibleVerification\n            androidHardwareAccelerationDisabled\n        />\n\n        <TextInput style={styles.textInput} placeholder={'Enter your One-Time-Password'}\n          onChangeText={(text) => setOTP(text)}/>\n        <Pressable style={styles.btnLogin} onPress = {() => checkOTP()} >\n          <Text style={{color:Colors.Secondary, fontWeight:'700', fontSize:20, padding:10}}>LOGIN</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n    homeScreen:{\n        backgroundColor: Colors.Primary,\n        flex:1,\n        alignItems:'center',\n    },\n    loginView:{\n      backgroundColor: Colors.Secondary,\n      height: '80%',\n      width:'35%',\n      borderRadius: 40,\n      alignItems:'center',\n      marginTop:'3%'\n    },\n    loginText:{\n      color: Colors.Primary,\n      fontSize: 40,\n      fontWeight: 'bold',\n      marginTop: 20,\n    },\n    textInput:{\n      marginTop: 5,\n      marginBottom:5,\n      borderWidth:2,\n      borderRadius:10,\n      borderColor: Colors.Primary,\n      fontSize: 20,\n      height: 40,\n      width: 300,\n      textAlign: 'center',\n    },\n    textInfo:{\n      color: Colors.Primary,\n      fontSize: 20,\n      marginTop: 18,\n      fontWeight:'bold',\n    },\n    btnOTP:{\n      backgroundColor: Colors.Primary,\n      borderRadius:10,\n      marginTop: 10,\n      marginBottom: 5\n    },\n    btnLogin:{\n      backgroundColor: Colors.Primary,\n      borderRadius:10,\n      marginTop: 5\n    },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}