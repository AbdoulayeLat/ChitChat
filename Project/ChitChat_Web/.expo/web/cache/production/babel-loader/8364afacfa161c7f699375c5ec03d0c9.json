{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Alert from\"react-native-web/dist/exports/Alert\";import Pressable from\"react-native-web/dist/exports/Pressable\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import React,{useEffect}from'react';import Colors from\"../../utils/Colors\";import{collection,addDoc,doc,setDoc,getDocs,getDoc,query,orderBy,onSnapshot,where}from'firebase/firestore';import{auth,firestore,storage}from\"../../firebase\";import{async}from'@firebase/util';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Contact=function Contact(_ref){var route=_ref.route,navigation=_ref.navigation;var _React$useState=React.useState('+1'),_React$useState2=_slicedToArray(_React$useState,2),phoneNumber=_React$useState2[0],setPhoneNumber=_React$useState2[1];var userPhoneNumber=auth.currentUser.phoneNumber;var checkUser=function checkUser(){getDoc(doc(firestore,\"users\",phoneNumber)).then(function(docSnap){if(docSnap.exists()){navigation.navigate('ChatScreen',{friendPhoneNumber:phoneNumber,userPhoneNumber:userPhoneNumber});}else{Alert.alert(\"This phone number hasn't registered to ChitChat yet! Invite themðŸ˜‰\");}});};return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.infoText,children:\"Who do you want to chat with:\"}),_jsx(TextInput,{style:styles.textInput,keyboardType:'phone-pad',placeholder:\"+11234567899\",onChangeText:function onChangeText(text){return setPhoneNumber(text.replace(/ /g,''));}}),_jsx(Pressable,{style:styles.btnChat,onPress:function onPress(){return checkUser();},children:_jsx(Text,{style:{color:Colors.Primary,fontWeight:'700',fontSize:20,padding:10},children:\"Enter Chat\"})})]});};var styles=StyleSheet.create({container:{alignItems:'center',justifyContent:'center',backgroundColor:Colors.Primary,flex:1},btnChat:{backgroundColor:Colors.Secondary,borderRadius:10,marginTop:5},textInput:{marginTop:5,marginBottom:5,borderWidth:2,borderRadius:10,backgroundColor:Colors.SILVER,fontSize:20,height:40,width:300,textAlign:'center'},infoText:{color:Colors.Secondary,fontSize:20,marginTop:50}});export default Contact;","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/Chat/Contact.js"],"names":["React","useEffect","Colors","collection","addDoc","doc","setDoc","getDocs","getDoc","query","orderBy","onSnapshot","where","auth","firestore","storage","async","Contact","route","navigation","useState","phoneNumber","setPhoneNumber","userPhoneNumber","currentUser","checkUser","then","docSnap","exists","navigate","friendPhoneNumber","Alert","alert","styles","container","infoText","textInput","text","replace","btnChat","color","Primary","fontWeight","fontSize","padding","StyleSheet","create","alignItems","justifyContent","backgroundColor","flex","Secondary","borderRadius","marginTop","marginBottom","borderWidth","SILVER","height","width","textAlign"],"mappings":"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","sourcesContent":["import { View, Text, TextInput, StyleSheet, Keyboard, Alert, Pressable, TouchableWithoutFeedback } from 'react-native';\nimport React, {useEffect} from 'react';\nimport Colors from '../../utils/Colors';\nimport {collection, addDoc, doc, setDoc, getDocs, getDoc, query, orderBy, onSnapshot, where } from 'firebase/firestore';\nimport { auth, firestore, storage } from '../../firebase';\nimport { async } from '@firebase/util';\n\nconst Contact = ({route,navigation}) => {\n  const [phoneNumber, setPhoneNumber] = React.useState('+1');\n  const userPhoneNumber = auth.currentUser.phoneNumber;\n\n  const checkUser = () => {\n    //Get Data from Firestore DBf\n    getDoc(doc(firestore, \"users\", phoneNumber)).then(docSnap => {\n      if (docSnap.exists()) {\n        navigation.navigate('ChatScreen', {\n          friendPhoneNumber: phoneNumber,\n          userPhoneNumber: userPhoneNumber,\n        })\n      } else {\n        Alert.alert(\"This phone number hasn't registered to ChitChat yet! Invite themðŸ˜‰\")\n      }\n    })\n  }\n  \n  return (\n    <View style={styles.container}>\n      <Text style={styles.infoText}>Who do you want to chat with:</Text>\n      <TextInput style={styles.textInput} keyboardType={'phone-pad'} placeholder='+11234567899' onChangeText={(text) => setPhoneNumber(text.replace(/ /g, ''))}/>\n      <Pressable style={styles.btnChat} onPress={() => checkUser()}>\n        <Text style={{color:Colors.Primary, fontWeight:'700', fontSize:20, padding:10}}>Enter Chat</Text>\n      </Pressable>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container:{\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Colors.Primary,\n    flex:1\n  },\n  btnChat:{\n    backgroundColor: Colors.Secondary,\n    borderRadius:10,\n    marginTop: 5\n  },\n  textInput:{\n    marginTop: 5,\n    marginBottom:5,\n    borderWidth:2,\n    borderRadius:10,\n    backgroundColor: Colors.SILVER,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n  infoText:{\n    color: Colors.Secondary,\n    fontSize: 20,\n    marginTop: 50,\n  },\n});\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}