{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState } from 'react';\nimport Colors from \"../utils/Colors.js\";\nimport ButtonCustom from \"../components/ButtonCustom.js\";\nimport { auth, firestore } from \"../firebase.js\";\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport { initializeApp, getApp } from 'firebase/app';\nimport { getAuth, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { collection, query, where, getDocs, doc, runTransaction } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar app = getApp();\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var recaptchaVerifier = React.useRef(null);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      confirmationResult = _React$useState2[0],\n      setConfirmationResult = _React$useState2[1];\n\n  var firebaseConfig = app ? app.options : undefined;\n  var attemptInvisibleVerification = false;\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      verificationId = _React$useState4[0],\n      setVerificationId = _React$useState4[1];\n\n  var _React$useState5 = React.useState('+1'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      phoneNumber = _React$useState6[0],\n      addPhoneNumber = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      otp = _React$useState8[0],\n      setOTP = _React$useState8[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var GetOTP = function GetOTP() {\n    var phoneProvider, _verificationId;\n\n    return _regeneratorRuntime.async(function GetOTP$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(phoneNumber && phoneNumber.length > 9)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.prev = 1;\n            phoneProvider = new PhoneAuthProvider(auth);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier));\n\n          case 5:\n            _verificationId = _context.sent;\n            setVerificationId(_verificationId);\n            setModalVisible(true);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            alert(_context.t0.message);\n\n          case 13:\n            _context.next = 16;\n            break;\n\n          case 15:\n            alert(\"Please enter a 10 digit number\");\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n\n  var checkOTP = function checkOTP() {\n    var credential, token, userRef, readUser;\n    return _regeneratorRuntime.async(function checkOTP$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            credential = PhoneAuthProvider.credential(verificationId, otp);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(signInWithCredential(auth, credential));\n\n          case 4:\n            setModalVisible(false);\n            token = auth.currentUser.uid;\n            userRef = doc(firestore, \"users\", phoneNumber);\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(runTransaction(firestore, function _callee(transaction) {\n              var user;\n              return _regeneratorRuntime.async(function _callee$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return _regeneratorRuntime.awrap(transaction.get(userRef));\n\n                    case 2:\n                      user = _context2.sent;\n\n                      if (!user.exists()) {\n                        navigation.navigate('Registration', {\n                          paramKey: phoneNumber,\n                          paramToken: token\n                        });\n                      } else {\n                        navigation.replace('Main', {\n                          paramKey: phoneNumber,\n                          paramToken: token\n                        });\n                      }\n\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 9:\n            readUser = _context3.sent;\n            _context3.next = 16;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](0);\n            setModalVisible(false);\n            console.log(_context3.t0.message);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? \"padding\" : null,\n    style: styles.kbView,\n    children: _jsxs(View, {\n      style: styles.homeScreen,\n      children: [_jsx(FirebaseRecaptchaVerifierModal, {\n        ref: recaptchaVerifier,\n        firebaseConfig: app.options,\n        attemptInvisibleVerification: true,\n        androidHardwareAccelerationDisabled: true\n      }), _jsx(Image, {\n        style: styles.logoImage,\n        source: require(\"../assets/img/LogoNoBG.png\")\n      }), _jsxs(View, {\n        style: styles.loginView,\n        children: [_jsx(Text, {\n          style: styles.loginText,\n          children: \"WELCOME\\uD83D\\uDC4B\\uD83C\\uDFFD\"\n        }), _jsx(Text, {\n          style: styles.textInfo,\n          children: \"Enter Your Phone Number:\"\n        }), _jsx(TextInput, {\n          keyboardType: \"phone-pad\",\n          style: styles.textInput,\n          placeholder: '+11234567899',\n          onChangeText: function onChangeText(text) {\n            return addPhoneNumber(text.replace(/ /g, ''));\n          }\n        }), _jsx(ButtonCustom, {\n          text: 'GET OTP',\n          onPress: function onPress() {\n            return GetOTP();\n          }\n        }), _jsx(Image, {\n          style: styles.imgLogin,\n          source: require(\"../assets/img/signin.png\")\n        }), _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          children: _jsx(View, {\n            style: styles.modalcenteredView,\n            children: _jsx(KeyboardAvoidingView, {\n              style: styles.kbView,\n              behavior: \"padding\",\n              children: _jsxs(View, {\n                style: styles.modalView,\n                children: [_jsx(Text, {\n                  style: styles.modalTitle,\n                  children: \"Please Enter your One-Time-Password\"\n                }), _jsx(TextInput, {\n                  style: styles.modalTextInput,\n                  keyboardType: \"number-pad\",\n                  autoFocus: true,\n                  onChangeText: function onChangeText(text) {\n                    return setOTP(text);\n                  },\n                  maxLength: 6\n                }), _jsx(ButtonCustom, {\n                  text: 'LOGIN',\n                  onPress: function onPress() {\n                    return checkOTP();\n                  }\n                }), _jsx(Button, {\n                  style: styles.txtClose,\n                  title: \"Close\",\n                  onPress: function onPress() {\n                    return setModalVisible(false);\n                  }\n                })]\n              })\n            })\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  homeScreen: {\n    backgroundColor: Colors.BLUE,\n    height: '100%'\n  },\n  logoImage: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    flex: 1,\n    marginTop: 20\n  },\n  loginView: {\n    backgroundColor: Colors.Secondary,\n    flex: 2,\n    borderTopStartRadius: 30,\n    borderTopEndRadius: 30,\n    alignItems: 'center',\n    paddingLeft: 25\n  },\n  loginText: {\n    color: Colors.Primary,\n    fontSize: 50,\n    fontWeight: 'bold',\n    marginTop: 50\n  },\n  textInfo: {\n    color: Colors.Primary,\n    fontSize: 20,\n    marginTop: 50\n  },\n  imgLogin: {\n    resizeMode: 'contain',\n    height: \"50%\"\n  },\n  textInput: {\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: Colors.Primary,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n  modalcenteredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  txtClose: {\n    color: Colors.Secondary,\n    fontSize: 20,\n    marginTop: 25\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: Colors.BLUE,\n    borderRadius: 20,\n    padding: 30,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalTitle: {\n    color: Colors.Secondary,\n    fontSize: 15,\n    fontWeight: '500'\n  },\n  modalTextInput: {\n    alignSelf: 'center',\n    marginTop: 30,\n    marginBottom: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: Colors.WHITE,\n    color: Colors.WHITE,\n    fontSize: 20,\n    height: 50,\n    width: 150,\n    textAlign: 'center'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/HomeScreen.js"],"names":["React","useState","Colors","ButtonCustom","auth","firestore","FirebaseRecaptchaVerifierModal","FirebaseRecaptchaBanner","initializeApp","getApp","getAuth","PhoneAuthProvider","signInWithCredential","async","collection","query","where","getDocs","doc","runTransaction","app","HomeScreen","navigation","recaptchaVerifier","useRef","confirmationResult","setConfirmationResult","firebaseConfig","options","undefined","attemptInvisibleVerification","verificationId","setVerificationId","phoneNumber","addPhoneNumber","otp","setOTP","modalVisible","setModalVisible","GetOTP","length","phoneProvider","verifyPhoneNumber","alert","message","checkOTP","credential","token","currentUser","uid","userRef","transaction","get","user","exists","navigate","paramKey","paramToken","replace","readUser","console","log","Platform","OS","styles","kbView","homeScreen","logoImage","require","loginView","loginText","textInfo","textInput","text","imgLogin","modalcenteredView","modalView","modalTitle","modalTextInput","txtClose","StyleSheet","create","backgroundColor","BLUE","height","resizeMode","alignSelf","flex","marginTop","Secondary","borderTopStartRadius","borderTopEndRadius","alignItems","paddingLeft","color","Primary","fontSize","fontWeight","marginBottom","borderWidth","borderRadius","borderColor","width","textAlign","justifyContent","margin","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","WHITE"],"mappings":"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","sourcesContent":["import {View, KeyboardAvoidingView, Text, Platform, TextInput, Modal, TouchableOpacity, StyleSheet, Image, Button} from 'react-native';\nimport React, {useState} from 'react';\nimport Colors from '../utils/Colors.js';\nimport ButtonCustom from '../components/ButtonCustom.js';\nimport { auth, firestore } from '../firebase.js';\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport { initializeApp, getApp } from 'firebase/app';\nimport { getAuth, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { collection, query, where, getDocs, doc, runTransaction } from \"firebase/firestore\";\n\nconst app = getApp();\n\nconst HomeScreen = ({navigation}) => {\n  const recaptchaVerifier = React.useRef(null);\n  const [confirmationResult, setConfirmationResult] = React.useState();\n  const firebaseConfig = app ? app.options : undefined;\n  const attemptInvisibleVerification = false;\n  const [verificationId, setVerificationId] = React.useState();\n  \n  const [phoneNumber, addPhoneNumber] = React.useState('+1');\n  const [otp, setOTP] = React.useState('')\n  const [modalVisible, setModalVisible] = useState(false);\n  \n  const GetOTP = async () => {\n    if(phoneNumber && phoneNumber.length > 9){\n      // The FirebaseRecaptchaVerifierModal ref implements the\n      // FirebaseAuthApplicationVerifier interface and can be\n      // passed directly to `verifyPhoneNumber`.\n      try {\n        const phoneProvider = new PhoneAuthProvider(auth);\n        const verificationId = await phoneProvider.verifyPhoneNumber(\n          phoneNumber,\n          recaptchaVerifier\n        );\n        setVerificationId(verificationId);\n        setModalVisible(true);\n      } catch (err) {\n        alert(err.message);\n      }\n    }   \n    else{\n      alert(\"Please enter a 10 digit number\");\n    }\n  }\n\n  const checkOTP = async () => {\n    try {\n      const credential = PhoneAuthProvider.credential(\n        verificationId,\n        otp\n      );\n      await signInWithCredential(auth, credential);\n      setModalVisible(false)\n      const token = auth.currentUser.uid;\n      const userRef = doc(firestore, \"users\", phoneNumber);\n\n      const readUser = await runTransaction(firestore, async (transaction) => {\n        const user = await transaction.get(userRef);\n        if (!user.exists()) {\n          navigation.navigate('Registration', {\n            paramKey: phoneNumber,\n            paramToken: token\n          })\n        }else{\n          navigation.replace('Main', {\n            paramKey: phoneNumber,\n            paramToken: token\n          })\n        }\n      });\n    } catch (err) {\n      setModalVisible(false)\n      console.log(err.message);\n    }\n  }\n\n  return(\n    <KeyboardAvoidingView\n      behavior= {(Platform.OS === 'ios')? \"padding\" : null}\n      style= {styles.kbView}\n    >\n    <View style = {styles.homeScreen}>\n        <FirebaseRecaptchaVerifierModal\n            ref={recaptchaVerifier}\n            firebaseConfig={app.options}\n            attemptInvisibleVerification\n            androidHardwareAccelerationDisabled\n        />\n        <Image style={styles.logoImage} source={require(\"../assets/img/LogoNoBG.png\")}/>\n        <View style={styles.loginView}>\n          <Text style={styles.loginText}>WELCOME👋🏽</Text>\n          <Text style={styles.textInfo}>Enter Your Phone Number:</Text>\n          <TextInput keyboardType='phone-pad' style={styles.textInput} placeholder={'+11234567899'}\n            onChangeText={(text) => addPhoneNumber(text.replace(/ /g, ''))}/>\n          <ButtonCustom text={'GET OTP'} onPress={() => GetOTP()}/>\n          <Image style={styles.imgLogin} source={require('../assets/img/signin.png')}/>\n          {/* OTP Modal */}\n          <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n          >\n          {/* Modal Content */}\n          <View style={styles.modalcenteredView}>\n            <KeyboardAvoidingView\n              style= {styles.kbView}\n              behavior = \"padding\"\n            >\n            <View style={styles.modalView}>\n              <Text style={styles.modalTitle}>Please Enter your One-Time-Password</Text>\n              <TextInput\n                 style={styles.modalTextInput}\n                 keyboardType = 'number-pad'\n                 autoFocus = {true} \n                 onChangeText={text => setOTP(text)}\n                 maxLength={6}\n              />\n              <ButtonCustom text={'LOGIN'} onPress={() => checkOTP()}/>\n              <Button style={styles.txtClose} title='Close' onPress={() => setModalVisible(false)}/>\n            </View>\n            </KeyboardAvoidingView>\n          </View>\n        </Modal>\n        </View>\n    </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n    homeScreen:{\n        backgroundColor: Colors.BLUE,\n        height: '100%',\n    },\n    logoImage:{\n        resizeMode: 'contain',\n        alignSelf: 'center',\n        flex: 1,\n        marginTop: 20,\n    },\n    loginView:{\n      backgroundColor: Colors.Secondary,\n      flex:2,\n      borderTopStartRadius: 30,\n      borderTopEndRadius: 30,\n      alignItems: 'center',\n      paddingLeft: 25,    \n    },\n    loginText:{\n      color: Colors.Primary,\n      fontSize: 50,\n      fontWeight: 'bold',\n      marginTop: 50,\n    },\n    textInfo:{\n      color: Colors.Primary,\n      fontSize: 20,\n      marginTop: 50,\n    },\n    imgLogin:{\n      resizeMode:'contain',\n      height: \"50%\"\n    },\n    textInput:{\n      marginTop: 5,\n      marginBottom:5,\n      borderWidth:2,\n      borderRadius:10,\n      borderColor: Colors.Primary,\n      fontSize: 20,\n      height: 40,\n      width: 300,\n      textAlign: 'center'\n    },\n    // Modal Style\n    modalcenteredView: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: 22,\n    },\n    txtClose:{\n      color: Colors.Secondary,\n      fontSize: 20,\n      marginTop: 25,\n    },\n    modalView: {\n      margin: 20,\n      backgroundColor: Colors.BLUE,\n      borderRadius: 20,\n      padding: 30,\n      alignItems: \"center\",\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 4,\n      elevation: 5\n    },\n    modalTitle:{\n      color: Colors.Secondary,\n      fontSize: 15,\n      fontWeight: '500',\n    },\n    modalTextInput:{\n      alignSelf: 'center',\n      marginTop: 30,\n      marginBottom: 10,\n      borderWidth:2,\n      borderRadius:10,\n      borderColor: Colors.WHITE,\n      color: Colors.WHITE,\n      fontSize: 20,\n      height: 50,\n      width: 150,\n      textAlign: 'center',\n    },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}