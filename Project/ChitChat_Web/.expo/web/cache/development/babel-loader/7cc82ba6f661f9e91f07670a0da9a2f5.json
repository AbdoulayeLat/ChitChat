{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState } from 'react';\nimport Colors from \"../utils/Colors.js\";\nimport { auth, firestore, app } from \"../firebase.js\";\nimport { initializeApp, getApp } from 'firebase/app';\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport { getAuth, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { collection, query, where, getDocs, doc, runTransaction } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var recaptchaVerifier = React.useRef(null);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      phoneNumber = _React$useState2[0],\n      addPhoneNumber = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      OTP = _React$useState4[0],\n      setOTP = _React$useState4[1];\n\n  var GetOTP = function GetOTP() {\n    var phoneProvider, _verificationId;\n\n    return _regeneratorRuntime.async(function GetOTP$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(phoneNumber && phoneNumber.length > 9)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.prev = 1;\n            phoneProvider = new PhoneAuthProvider(auth);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier.current));\n\n          case 5:\n            _verificationId = _context.sent;\n            setVerificationId(_verificationId);\n            setModalVisible(true);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            alert(_context.t0.message);\n\n          case 13:\n            _context.next = 16;\n            break;\n\n          case 15:\n            alert(\"Please enter a 10 digit number\");\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n\n  var checkOTP = function checkOTP() {\n    var credential, token, userRef, readUser;\n    return _regeneratorRuntime.async(function checkOTP$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            credential = PhoneAuthProvider.credential(verificationId, otp);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(signInWithCredential(auth, credential));\n\n          case 4:\n            setModalVisible(false);\n            token = auth.currentUser.uid;\n            userRef = doc(firestore, \"users\", phoneNumber);\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(runTransaction(firestore, function _callee(transaction) {\n              var user;\n              return _regeneratorRuntime.async(function _callee$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return _regeneratorRuntime.awrap(transaction.get(userRef));\n\n                    case 2:\n                      user = _context2.sent;\n\n                      if (!user.exists()) {\n                        navigation.navigate('Registration', {\n                          paramKey: phoneNumber,\n                          paramToken: token\n                        });\n                      } else {\n                        navigation.replace('Main', {\n                          paramKey: phoneNumber,\n                          paramToken: token\n                        });\n                      }\n\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 9:\n            readUser = _context3.sent;\n            _context3.next = 16;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](0);\n            setModalVisible(false);\n            console.log(_context3.t0.message);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.homeScreen,\n    children: _jsxs(View, {\n      style: styles.loginView,\n      children: [_jsx(Image, {\n        source: require(\"../assets/img/Logo.png\"),\n        style: {\n          width: 200,\n          height: 200,\n          marginTop: 20,\n          borderRadius: 40\n        }\n      }), _jsx(Text, {\n        style: styles.loginText,\n        children: \"WELCOME\\uD83D\\uDC4B\\uD83C\\uDFFD\"\n      }), _jsx(Text, {\n        style: styles.textInfo,\n        children: \"Enter Your Phone Number:\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: '+11234567899',\n        onChangeText: function onChangeText(text) {\n          return addPhoneNumber(text.replace(/ /g, ''));\n        }\n      }), _jsx(Text, {\n        style: {\n          color: 'grey',\n          fontSize: 15\n        },\n        children: \"*You will receive a code on your phone number\"\n      }), _jsx(Pressable, {\n        style: styles.btnOTP,\n        children: _jsx(Text, {\n          style: {\n            color: Colors.Secondary,\n            fontWeight: '700',\n            fontSize: 20,\n            padding: 10\n          },\n          children: \"Get OTP\"\n        })\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: 'Enter your One-Time-Password',\n        onChangeText: function onChangeText(text) {\n          return setOTP(text);\n        }\n      }), _jsx(Pressable, {\n        style: styles.btnLogin,\n        onPress: function onPress() {\n          return navigation.replace('Main', {\n            paramKey: phoneNumber\n          });\n        },\n        children: _jsx(Text, {\n          style: {\n            color: Colors.Secondary,\n            fontWeight: '700',\n            fontSize: 20,\n            padding: 10\n          },\n          children: \"LOGIN\"\n        })\n      }), _jsx(FirebaseRecaptchaVerifierModal, {\n        ref: recaptchaVerifier,\n        firebaseConfig: app.options,\n        attemptInvisibleVerification: true\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  homeScreen: {\n    backgroundColor: Colors.Primary,\n    flex: 1,\n    alignItems: 'center'\n  },\n  loginView: {\n    backgroundColor: Colors.Secondary,\n    height: '80%',\n    width: '35%',\n    borderRadius: 40,\n    alignItems: 'center',\n    marginTop: '3%'\n  },\n  loginText: {\n    color: Colors.Primary,\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginTop: 20\n  },\n  textInput: {\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: Colors.Primary,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n  textInfo: {\n    color: Colors.Primary,\n    fontSize: 20,\n    marginTop: 18,\n    fontWeight: 'bold'\n  },\n  btnOTP: {\n    backgroundColor: Colors.Primary,\n    borderRadius: 10,\n    marginTop: 10,\n    marginBottom: 5\n  },\n  btnLogin: {\n    backgroundColor: Colors.Primary,\n    borderRadius: 10,\n    marginTop: 5\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/HomeScreen.js"],"names":["React","useState","Colors","auth","firestore","app","initializeApp","getApp","FirebaseRecaptchaVerifierModal","FirebaseRecaptchaBanner","getAuth","PhoneAuthProvider","signInWithCredential","async","collection","query","where","getDocs","doc","runTransaction","HomeScreen","navigation","recaptchaVerifier","useRef","phoneNumber","addPhoneNumber","OTP","setOTP","GetOTP","length","phoneProvider","verifyPhoneNumber","current","verificationId","setVerificationId","setModalVisible","alert","message","checkOTP","credential","otp","token","currentUser","uid","userRef","transaction","get","user","exists","navigate","paramKey","paramToken","replace","readUser","console","log","styles","homeScreen","loginView","require","width","height","marginTop","borderRadius","loginText","textInfo","textInput","text","color","fontSize","btnOTP","Secondary","fontWeight","padding","btnLogin","options","StyleSheet","create","backgroundColor","Primary","flex","alignItems","marginBottom","borderWidth","borderColor","textAlign"],"mappings":"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","sourcesContent":["import {View, KeyboardAvoidingView, Text, Platform, TextInput, Modal, Pressable, StyleSheet, Image, Button} from 'react-native';\nimport React, {useState} from 'react';\nimport Colors from '../utils/Colors.js';\nimport { auth, firestore, app } from '../firebase.js';\nimport { initializeApp, getApp } from 'firebase/app';\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport { getAuth, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { collection, query, where, getDocs, doc, runTransaction } from \"firebase/firestore\";\n\nconst HomeScreen = ({navigation}) => {\n  const recaptchaVerifier = React.useRef(null);\n  const [phoneNumber, addPhoneNumber] = React.useState('');\n  const [OTP, setOTP] = React.useState('');\n\n  const GetOTP = async () => {\n    if(phoneNumber && phoneNumber.length > 9){\n      // The FirebaseRecaptchaVerifierModal ref implements the\n      // FirebaseAuthApplicationVerifier interface and can be\n      // passed directly to `verifyPhoneNumber`.\n      try {\n        const phoneProvider = new PhoneAuthProvider(auth);\n        const verificationId = await phoneProvider.verifyPhoneNumber(\n          phoneNumber,\n          recaptchaVerifier.current\n        );\n        setVerificationId(verificationId);\n        setModalVisible(true);\n      } catch (err) {\n        alert(err.message);\n      }\n    }   \n    else{\n      alert(\"Please enter a 10 digit number\");\n    }\n  }\n\n  const checkOTP = async () => {\n    try {\n      const credential = PhoneAuthProvider.credential(\n        verificationId,\n        otp\n      );\n      await signInWithCredential(auth, credential);\n      setModalVisible(false)\n      const token = auth.currentUser.uid;\n      const userRef = doc(firestore, \"users\", phoneNumber);\n\n      const readUser = await runTransaction(firestore, async (transaction) => {\n        const user = await transaction.get(userRef);\n        if (!user.exists()) {\n          navigation.navigate('Registration', {\n            paramKey: phoneNumber,\n            paramToken: token\n          })\n        }else{\n          navigation.replace('Main', {\n            paramKey: phoneNumber,\n            paramToken: token\n          })\n        }\n      });\n    } catch (err) {\n      setModalVisible(false)\n      console.log(err.message);\n    }\n  }\n\n  return(\n    <View style={styles.homeScreen}>\n      <View style={styles.loginView}>\n        <Image source={require('../assets/img/Logo.png')} style={{width:200, height:200, marginTop:20, borderRadius:40}} />\n\n        <Text style={styles.loginText}>WELCOME👋🏽</Text>\n        <Text style={styles.textInfo}>Enter Your Phone Number:</Text>\n        <TextInput style={styles.textInput} placeholder={'+11234567899'}\n          onChangeText={(text) => addPhoneNumber(text.replace(/ /g, ''))}/>\n        <Text style={{color:'grey', fontSize:15}} >*You will receive a code on your phone number</Text>\n        <Pressable style={styles.btnOTP}>\n          <Text style={{color:Colors.Secondary, fontWeight:'700', fontSize:20, padding:10}}>Get OTP</Text>\n        </Pressable>\n\n        <TextInput style={styles.textInput} placeholder={'Enter your One-Time-Password'}\n          onChangeText={(text) => setOTP(text)}/>\n        <Pressable style={styles.btnLogin} onPress={() => navigation.replace('Main', {\n            paramKey: phoneNumber,\n          })}>\n          <Text style={{color:Colors.Secondary, fontWeight:'700', fontSize:20, padding:10}}>LOGIN</Text>\n        </Pressable>\n\n        <FirebaseRecaptchaVerifierModal\n            ref={recaptchaVerifier}\n            firebaseConfig={app.options}\n            attemptInvisibleVerification\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n    homeScreen:{\n        backgroundColor: Colors.Primary,\n        flex:1,\n        alignItems:'center',\n    },\n    loginView:{\n      backgroundColor: Colors.Secondary,\n      height: '80%',\n      width:'35%',\n      borderRadius: 40,\n      alignItems:'center',\n      marginTop:'3%'\n    },\n    loginText:{\n      color: Colors.Primary,\n      fontSize: 40,\n      fontWeight: 'bold',\n      marginTop: 20,\n    },\n    textInput:{\n      marginTop: 5,\n      marginBottom:5,\n      borderWidth:2,\n      borderRadius:10,\n      borderColor: Colors.Primary,\n      fontSize: 20,\n      height: 40,\n      width: 300,\n      textAlign: 'center',\n    },\n    textInfo:{\n      color: Colors.Primary,\n      fontSize: 20,\n      marginTop: 18,\n      fontWeight:'bold',\n    },\n    btnOTP:{\n      backgroundColor: Colors.Primary,\n      borderRadius:10,\n      marginTop: 10,\n      marginBottom: 5\n    },\n    btnLogin:{\n      backgroundColor: Colors.Primary,\n      borderRadius:10,\n      marginTop: 5\n    },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}