{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React from 'react';\nimport Colors from \"../utils/Colors\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { auth, firestore, storage } from \"../firebase.js\";\nimport { initializeApp, getApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { collection, addDoc, doc, setDoc } from \"firebase/firestore\";\nimport { ref, uploadBytes, getDownloadURL } from '@firebase/storage';\nimport { async } from '@firebase/util';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegistrationScreen = function RegistrationScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      firstName = _React$useState2[0],\n      setFirstname = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastName = _React$useState4[0],\n      setLastname = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedImage = _React$useState10[0],\n      setSelectedImage = _React$useState10[1];\n\n  var phoneNumber = \"+16139810386\";\n  var url = \"\";\n\n  var image = require(\"../utils/Images/profilepicture.png\");\n\n  var app = getApp();\n\n  if (selectedImage !== null) {\n    image = {\n      uri: selectedImage.localUri\n    };\n  }\n\n  return _jsxs(View, {\n    style: styles.signUpView,\n    children: [_jsx(Text, {\n      style: styles.textSignup,\n      children: \"Create Your Profile\\uD83D\\uDE04\"\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Image, {\n        style: styles.profilepicture,\n        source: image\n      })\n    }), _jsx(Text, {\n      style: styles.imageInfo,\n      children: \"*Click the Image to Pick your Profile Picture\"\n    }), _jsx(Text, {\n      style: styles.signUpTitle,\n      children: \"First Name\"\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      onChangeText: function onChangeText(text) {\n        return setFirstname(text);\n      },\n      placeholder: \"Chit Chat\",\n      placeholderTextColor: Colors.WHITE\n    }), _jsx(Text, {\n      style: styles.signUpTitle,\n      children: \"Last Name\"\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      onChangeText: function onChangeText(text) {\n        return setLastname(text);\n      },\n      placeholder: \"Chit Chat\",\n      placeholderTextColor: Colors.WHITE\n    }), _jsx(Text, {\n      style: styles.signUpTitle,\n      children: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      placeholderTextColor: Colors.WHITE,\n      placeholder: \"example@email.com\",\n      keyboardType: \"email-address\"\n    }), _jsx(Pressable, {\n      style: styles.btnLogin,\n      children: _jsx(Text, {\n        style: {\n          color: Colors.Secondary,\n          fontWeight: '700',\n          fontSize: 20,\n          padding: 10\n        },\n        children: \"CREATE \\u2705\"\n      })\n    })]\n  });\n};\n\nexport default RegistrationScreen;\nvar styles = StyleSheet.create({\n  signUpView: {\n    alignItems: 'center',\n    flex: 1,\n    backgroundColor: Colors.Primary\n  },\n  registerScreen: {\n    backgroundColor: Colors.BLUE\n  },\n  signUpTitle: {\n    fontSize: 20,\n    color: Colors.Secondary,\n    fontWeight: '600'\n  },\n  textSignup: {\n    fontSize: 35,\n    color: Colors.Secondary,\n    alignSelf: 'center',\n    marginTop: '15%',\n    marginBottom: 15,\n    fontWeight: 'bold'\n  },\n  profilepicture: {\n    resizeMode: 'contain',\n    height: 150,\n    width: 150,\n    borderRadius: 40\n  },\n  imageInfo: {\n    color: Colors.GREEN,\n    marginBottom: 10\n  },\n  textInput: {\n    marginVertical: 15,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: Colors.WHITE_GREY,\n    color: Colors.Secondary,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/RegistrationScreen.js"],"names":["React","Colors","ImagePicker","auth","firestore","storage","initializeApp","getApp","getAuth","collection","addDoc","doc","setDoc","ref","uploadBytes","getDownloadURL","async","RegistrationScreen","route","navigation","useState","firstName","setFirstname","lastName","setLastname","email","setEmail","password","setPassword","selectedImage","setSelectedImage","phoneNumber","url","image","require","app","uri","localUri","styles","signUpView","textSignup","profilepicture","imageInfo","signUpTitle","textInput","text","WHITE","btnLogin","color","Secondary","fontWeight","fontSize","padding","StyleSheet","create","alignItems","flex","backgroundColor","Primary","registerScreen","BLUE","alignSelf","marginTop","marginBottom","resizeMode","height","width","borderRadius","GREEN","marginVertical","borderWidth","borderColor","WHITE_GREY","textAlign"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, TouchableOpacity, TextInput, Pressable } from 'react-native';\nimport React from 'react';\nimport Colors from '../utils/Colors';\nimport * as ImagePicker from 'expo-image-picker';\nimport { auth, firestore, storage } from '../firebase.js';\nimport { initializeApp, getApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { collection, addDoc, doc, setDoc } from \"firebase/firestore\"; \nimport { ref, uploadBytes, getDownloadURL } from '@firebase/storage';\nimport { async } from '@firebase/util';\n\nconst RegistrationScreen = ({route, navigation}) => {\n  const [firstName, setFirstname] = React.useState();\n  const [lastName, setLastname] = React.useState();\n  const [email, setEmail] = React.useState();\n  const [password, setPassword] = React.useState();\n  const [selectedImage, setSelectedImage] = React.useState(null);\n  const phoneNumber = \"+16139810386\";\n  // const token = auth.currentUser.uid;\n  var url = \"\";\n  var image = require('../utils/Images/profilepicture.png');\n  \n  const app = getApp();\n  // const storageRef = ref(storage, 'images/ProfilePictures/'+token);\n  \n  \n  // let uploadProfile = async (uri, imageName) => {\n  //   const response = await fetch(uri);\n  //   const blob = await response.blob();\n\n  //   uploadBytes(storageRef, blob).then((snapshot) => {\n  //     getURL();\n  //   });\n  // }\n\n  // // Image Pick\n  // let openImagePickerAsync = async () => {\n  //   let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    \n  //   if (permissionResult.granted === false) {\n  //     alert(\"Permission to access camera roll is required!\");\n  //     return;\n  //   }\n  //   let pickerResult = await ImagePicker.launchImageLibraryAsync({\n  //     allowsEditing: true\n  //   });\n  //   if (pickerResult.cancelled === true) {\n  //     return;\n  //   }\n  //   setSelectedImage({ localUri: pickerResult.uri }); \n  // }\n\n  // let getURL = async () => {\n  //   getDownloadURL(storageRef).then((url) => {\n  //     writeToDB(url);\n  //   });\n  // }\n\n\n  // let writeToDB = async (url) => {\n  //   try {\n  //       await setDoc(doc(firestore, \"users\", phoneNumber), {\n  //         UID: token,\n  //         firstName: firstName,\n  //         lastName: lastName,\n  //         email: email,\n  //         phoneNumber: phoneNumber,\n  //         profilepictureURL: url,\n  //       });\n  //       navigation.replace('Main', { \n  //           paramKey: phoneNumber,\n  //           paramToken: token\n  //       });\n  //   } catch (e) {\n  //       console.error(\"Error adding document: \", e);\n  //       alert(\"Something went wrong! Please try again.🤕\")\n  //     }\n  // }\n  \n  if (selectedImage !== null) {\n    image = { uri: selectedImage.localUri }\n  }\n  return (\n    <View style={styles.signUpView}>\n      <Text style={styles.textSignup}>Create Your Profile😄</Text>\n      <TouchableOpacity >\n        <Image style={styles.profilepicture} source={image}/>\n      </TouchableOpacity>\n      <Text style={styles.imageInfo}>*Click the Image to Pick your Profile Picture</Text>\n      \n      <Text style={styles.signUpTitle}>First Name</Text>\n      <TextInput  style={styles.textInput} onChangeText={text => setFirstname(text)} placeholder={\"Chit Chat\"} placeholderTextColor = {Colors.WHITE}/>\n      <Text style={styles.signUpTitle}>Last Name</Text>\n      <TextInput  style={styles.textInput} onChangeText={text => setLastname(text)} placeholder={\"Chit Chat\"} placeholderTextColor = {Colors.WHITE}/>\n      <Text style={styles.signUpTitle}>Email</Text>\n      <TextInput style={styles.textInput} onChangeText={text => setEmail(text)} placeholderTextColor = {Colors.WHITE} placeholder={\"example@email.com\"} keyboardType={\"email-address\"}/>\n      <Pressable style={styles.btnLogin} >\n          <Text style={{color:Colors.Secondary, fontWeight:'700', fontSize:20, padding:10}}>CREATE ✅</Text>\n      </Pressable>\n    </View>\n  )\n}\n\nexport default RegistrationScreen\n\nconst styles = StyleSheet.create({\n  signUpView:{\n    alignItems: 'center',\n    flex:1,\n    backgroundColor: Colors.Primary\n  },\n  registerScreen:{\n    backgroundColor: Colors.BLUE,\n  },\n  signUpTitle:{\n    fontSize: 20,\n    color: Colors.Secondary,\n    fontWeight: '600',\n  },\n  textSignup:{\n      fontSize: 35,\n      color: Colors.Secondary,\n      alignSelf: 'center',\n      marginTop: '15%',\n      marginBottom: 15,\n      fontWeight: 'bold'\n  },\n  profilepicture:{\n    resizeMode: 'contain',\n    height: 150,\n    width: 150,\n    borderRadius: 40,\n  },\n  imageInfo:{\n    color: Colors.GREEN,\n    marginBottom: 10,\n  },\n  textInput:{\n    marginVertical: 15,\n    borderWidth:2,\n    borderRadius:10,\n    borderColor: Colors.WHITE_GREY,\n    color: Colors.Secondary,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n})"]},"metadata":{},"sourceType":"module"}