{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport Colors from \"../utils/Colors\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar RegistrationScreen = function RegistrationScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      firstName = _React$useState2[0],\n      setFirstname = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastName = _React$useState4[0],\n      setLastname = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedImage = _React$useState10[0],\n      setSelectedImage = _React$useState10[1];\n\n  var phoneNumber = route.params.paramKey;\n  var token = route.params.paramToken;\n  var url = \"\";\n\n  var image = require(\"../utils/Images/profilepicture.png\");\n\n  var app = getApp();\n  var storageRef = ref(storage, 'images/ProfilePictures/' + token);\n\n  var uploadProfile = function uploadProfile(uri, imageName) {\n    var response, blob;\n    return _regeneratorRuntime.async(function uploadProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context.sent;\n            uploadBytes(storageRef, blob).then(function (snapshot) {\n              getURL();\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context2.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context2.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              allowsEditing: true\n            }));\n\n          case 8:\n            pickerResult = _context2.sent;\n\n            if (!(pickerResult.cancelled === true)) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 11:\n            setSelectedImage({\n              localUri: pickerResult.uri\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getURL = function getURL() {\n    return _regeneratorRuntime.async(function getURL$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            getDownloadURL(storageRef).then(function (url) {\n              writeToDB(url);\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var writeToDB = function writeToDB(url) {\n    return _regeneratorRuntime.async(function writeToDB$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(setDoc(doc(firestore, \"users\", phoneNumber), {\n              UID: token,\n              firstName: firstName,\n              lastName: lastName,\n              email: email,\n              phoneNumber: phoneNumber,\n              profilepictureURL: url\n            }));\n\n          case 3:\n            navigation.replace('Main', {\n              paramKey: phoneNumber,\n              paramToken: token\n            });\n            _context4.next = 10;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(\"Error adding document: \", _context4.t0);\n            alert(\"Something went wrong! Please try again.ðŸ¤•\");\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  if (selectedImage !== null) {\n    image = {\n      uri: selectedImage.localUri\n    };\n  }\n\n  return _jsxs(View, {\n    style: styles.signUpView,\n    children: [_jsxs(Text, {\n      children: [\" style=\", styles.textSignup, \">Create Your Profile\\uD83D\\uDE04\"]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return openImagePickerAsync();\n      },\n      children: _jsx(Image, {\n        style: styles.profilepicture,\n        source: image\n      })\n    }), _jsx(Text, {\n      style: styles.imageInfo,\n      children: \"*Click the Image to Pick your Profile Picture\"\n    }), _jsx(Text, {\n      style: styles.signUpTitle,\n      children: \"First Name\"\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      onChangeText: function onChangeText(text) {\n        return setFirstname(text);\n      },\n      placeholder: \"Chit Chat\",\n      placeholderTextColor: Colors.WHITE\n    }), _jsx(Text, {\n      style: styles.signUpTitle,\n      children: \"Last Name\"\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      onChangeText: function onChangeText(text) {\n        return setLastname(text);\n      },\n      placeholder: \"Chit Chat\",\n      placeholderTextColor: Colors.WHITE\n    }), _jsx(Text, {\n      style: styles.signUpTitle,\n      children: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      placeholderTextColor: Colors.WHITE,\n      placeholder: \"example@email.com\",\n      keyboardType: \"email-address\"\n    }), _jsx(ButtonCustom, {\n      text: \"CREATE \\u2705\",\n      onPress: function onPress() {\n        return uploadProfile(selectedImage.localUri, token + \" Profile Picture\");\n      }\n    })]\n  });\n};\n\nexport default RegistrationScreen;\nvar styles = StyleSheet.create({\n  registerScreen: {\n    flex: 1,\n    backgroundColor: Colors.BLUE\n  },\n  signUpView: {\n    alignItems: 'center'\n  },\n  signUpTitle: {\n    fontSize: 20,\n    color: Colors.Secondary,\n    fontWeight: '600'\n  },\n  textSignup: {\n    fontSize: 35,\n    color: Colors.Secondary,\n    alignSelf: 'center',\n    marginTop: '15%',\n    marginBottom: 15,\n    fontWeight: 'bold'\n  },\n  profilepicture: {\n    resizeMode: 'contain',\n    height: 150,\n    width: 150,\n    borderRadius: 40\n  },\n  imageInfo: {\n    color: Colors.GREEN,\n    marginBottom: 10\n  },\n  textInput: {\n    marginVertical: 15,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: Colors.WHITE_GREY,\n    color: Colors.Secondary,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/RegistrationScreen.js"],"names":["React","Colors","RegistrationScreen","route","navigation","useState","firstName","setFirstname","lastName","setLastname","email","setEmail","password","setPassword","selectedImage","setSelectedImage","phoneNumber","params","paramKey","token","paramToken","url","image","require","app","getApp","storageRef","ref","storage","uploadProfile","uri","imageName","fetch","response","blob","uploadBytes","then","snapshot","getURL","openImagePickerAsync","ImagePicker","requestMediaLibraryPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","allowsEditing","pickerResult","cancelled","localUri","getDownloadURL","writeToDB","setDoc","doc","firestore","UID","profilepictureURL","replace","console","error","styles","signUpView","textSignup","profilepicture","imageInfo","signUpTitle","textInput","text","WHITE","StyleSheet","create","registerScreen","flex","backgroundColor","BLUE","alignItems","fontSize","color","Secondary","fontWeight","alignSelf","marginTop","marginBottom","resizeMode","height","width","borderRadius","GREEN","marginVertical","borderWidth","borderColor","WHITE_GREY","textAlign"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport React from 'react';\nimport Colors from '../utils/Colors';\n\nconst RegistrationScreen = ({route, navigation}) => {\n  const [firstName, setFirstname] = React.useState();\n  const [lastName, setLastname] = React.useState();\n  const [email, setEmail] = React.useState();\n  const [password, setPassword] = React.useState();\n  const [selectedImage, setSelectedImage] = React.useState(null);\n  const phoneNumber = route.params.paramKey;\n  const token = route.params.paramToken;\n  var url = \"\";\n  var image = require('../utils/Images/profilepicture.png');\n  \n  const app = getApp();\n  const storageRef = ref(storage, 'images/ProfilePictures/'+token);\n  \n  \n  let uploadProfile = async (uri, imageName) => {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n\n    uploadBytes(storageRef, blob).then((snapshot) => {\n      getURL();\n    });\n  }\n\n  // Image Pick\n  let openImagePickerAsync = async () => {\n    let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    \n    if (permissionResult.granted === false) {\n      alert(\"Permission to access camera roll is required!\");\n      return;\n    }\n    let pickerResult = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true\n    });\n    if (pickerResult.cancelled === true) {\n      return;\n    }\n    setSelectedImage({ localUri: pickerResult.uri }); \n  }\n\n  let getURL = async () => {\n    getDownloadURL(storageRef).then((url) => {\n      writeToDB(url);\n    });\n  }\n\n\n  let writeToDB = async (url) => {\n    try {\n        await setDoc(doc(firestore, \"users\", phoneNumber), {\n          UID: token,\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          phoneNumber: phoneNumber,\n          profilepictureURL: url,\n        });\n        navigation.replace('Main', { \n            paramKey: phoneNumber,\n            paramToken: token\n        });\n    } catch (e) {\n        console.error(\"Error adding document: \", e);\n        alert(\"Something went wrong! Please try again.ðŸ¤•\")\n      }\n  }\n  \n  if (selectedImage !== null) {\n    image = { uri: selectedImage.localUri }\n  }\n  return (\n    <View style={styles.signUpView}>\n      <Text> style={styles.textSignup}>Create Your ProfileðŸ˜„</Text>\n      <TouchableOpacity onPress={() => openImagePickerAsync()}>\n        <Image style={styles.profilepicture} source={image}/>\n      </TouchableOpacity>\n      <Text style={styles.imageInfo}>*Click the Image to Pick your Profile Picture</Text>\n      \n      <Text style={styles.signUpTitle}>First Name</Text>\n      <TextInput  style={styles.textInput} onChangeText={text => setFirstname(text)} placeholder={\"Chit Chat\"} placeholderTextColor = {Colors.WHITE}/>\n      <Text style={styles.signUpTitle}>Last Name</Text>\n      <TextInput  style={styles.textInput} onChangeText={text => setLastname(text)} placeholder={\"Chit Chat\"} placeholderTextColor = {Colors.WHITE}/>\n      <Text style={styles.signUpTitle}>Email</Text>\n      <TextInput style={styles.textInput} onChangeText={text => setEmail(text)} placeholderTextColor = {Colors.WHITE} placeholder={\"example@email.com\"} keyboardType={\"email-address\"}/>\n      \n      <ButtonCustom text='CREATE âœ…' onPress={() => uploadProfile(selectedImage.localUri, token+\" Profile Picture\")}/>\n    </View>\n  )\n}\n\nexport default RegistrationScreen\n\nconst styles = StyleSheet.create({\n  registerScreen:{\n    flex:1,\n    backgroundColor: Colors.BLUE,\n  },\n  signUpView:{\n    alignItems: 'center',\n  },\n  signUpTitle:{\n    fontSize: 20,\n    color: Colors.Secondary,\n    fontWeight: '600',\n  },\n  textSignup:{\n      fontSize: 35,\n      color: Colors.Secondary,\n      alignSelf: 'center',\n      marginTop: '15%',\n      marginBottom: 15,\n      fontWeight: 'bold'\n  },\n  profilepicture:{\n    resizeMode: 'contain',\n    height: 150,\n    width: 150,\n    borderRadius: 40,\n  },\n  imageInfo:{\n    color: Colors.GREEN,\n    marginBottom: 10,\n  },\n  textInput:{\n    marginVertical: 15,\n    borderWidth:2,\n    borderRadius:10,\n    borderColor: Colors.WHITE_GREY,\n    color: Colors.Secondary,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n})"]},"metadata":{},"sourceType":"module"}