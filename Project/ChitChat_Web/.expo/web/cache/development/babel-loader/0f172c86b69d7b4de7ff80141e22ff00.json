{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState } from 'react';\nimport Colors from \"../utils/Colors.js\";\nimport { auth, firestore } from \"../firebase.js\";\nimport { getApp } from 'firebase/app';\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport { getAuth, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { collection, query, where, getDocs, doc, runTransaction } from \"firebase/firestore\";\nimport * as firebase from 'firebase/app';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var GetOTP = function GetOTP() {\n    return _regeneratorRuntime.async(function GetOTP$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkOTP = function checkOTP() {\n    return _regeneratorRuntime.async(function checkOTP$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.homeScreen,\n    children: _jsxs(View, {\n      style: styles.loginView,\n      children: [_jsx(Image, {\n        source: require(\"../assets/img/Logo.png\"),\n        style: {\n          width: 200,\n          height: 200,\n          marginTop: 20,\n          borderRadius: 40\n        }\n      }), _jsx(Text, {\n        style: styles.loginText,\n        children: \"WELCOME\\uD83D\\uDC4B\\uD83C\\uDFFD\"\n      }), _jsx(Text, {\n        style: styles.textInfo,\n        children: \"Enter Your Phone Number:\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: '+11234567899',\n        onChangeText: function onChangeText(text) {\n          return addPhoneNumber(text.replace(/ /g, ''));\n        }\n      }), _jsx(Text, {\n        style: {\n          color: 'grey',\n          fontSize: 15\n        },\n        children: \"*You will receive a code on your phone number\"\n      }), _jsx(Pressable, {\n        style: styles.btnOTP,\n        children: _jsx(Text, {\n          style: {\n            color: Colors.Secondary,\n            fontWeight: '700',\n            fontSize: 20,\n            padding: 10\n          },\n          onPress: function onPress() {\n            return GetOTP();\n          },\n          children: \"Get OTP\"\n        })\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: 'Enter your One-Time-Password',\n        onChangeText: function onChangeText(text) {\n          return setOTP(text);\n        }\n      }), _jsx(Pressable, {\n        style: styles.btnLogin,\n        onPress: function onPress() {\n          return checkOTP();\n        },\n        children: _jsx(Text, {\n          style: {\n            color: Colors.Secondary,\n            fontWeight: '700',\n            fontSize: 20,\n            padding: 10\n          },\n          children: \"LOGIN\"\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  homeScreen: {\n    backgroundColor: Colors.Primary,\n    flex: 1,\n    alignItems: 'center'\n  },\n  loginView: {\n    backgroundColor: Colors.Secondary,\n    height: '80%',\n    width: '35%',\n    borderRadius: 40,\n    alignItems: 'center',\n    marginTop: '3%'\n  },\n  loginText: {\n    color: Colors.Primary,\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginTop: 20\n  },\n  textInput: {\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: Colors.Primary,\n    fontSize: 10,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n  textInfo: {\n    color: Colors.Primary,\n    fontSize: 20,\n    marginTop: 18,\n    fontWeight: 'bold'\n  },\n  btnOTP: {\n    backgroundColor: Colors.Primary,\n    borderRadius: 10,\n    marginTop: 10,\n    marginBottom: 5\n  },\n  btnLogin: {\n    backgroundColor: Colors.Primary,\n    borderRadius: 10,\n    marginTop: 5\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/HomeScreen.js"],"names":["React","useState","Colors","auth","firestore","getApp","FirebaseRecaptchaVerifierModal","FirebaseRecaptchaBanner","getAuth","PhoneAuthProvider","signInWithCredential","async","collection","query","where","getDocs","doc","runTransaction","firebase","HomeScreen","navigation","GetOTP","checkOTP","styles","homeScreen","loginView","require","width","height","marginTop","borderRadius","loginText","textInfo","textInput","text","addPhoneNumber","replace","color","fontSize","btnOTP","Secondary","fontWeight","padding","setOTP","btnLogin","StyleSheet","create","backgroundColor","Primary","flex","alignItems","marginBottom","borderWidth","borderColor","textAlign"],"mappings":"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","sourcesContent":["import {View, KeyboardAvoidingView, Text, Platform, TextInput, Modal, Pressable, StyleSheet, Image, Button} from 'react-native';\nimport React, {useState} from 'react';\nimport Colors from '../utils/Colors.js';\nimport { auth, firestore } from '../firebase.js';\nimport { getApp } from 'firebase/app';\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport { getAuth, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { collection, query, where, getDocs, doc, runTransaction } from \"firebase/firestore\";\nimport * as firebase from 'firebase/app';\n\nconst HomeScreen = ({navigation}) => {\n\n  const GetOTP = async () => {\n    \n  }\n\n  const checkOTP = async () => {\n    \n  }\n  \n  return(\n    <View style={styles.homeScreen}>\n      <View style={styles.loginView}>\n        <Image source={require('../assets/img/Logo.png')} style={{width:200, height:200, marginTop:20, borderRadius:40}} />\n\n        <Text style={styles.loginText}>WELCOME👋🏽</Text>\n        <Text style={styles.textInfo}>Enter Your Phone Number:</Text>\n        <TextInput style={styles.textInput} placeholder={'+11234567899'}\n          onChangeText={(text) => addPhoneNumber(text.replace(/ /g, ''))}/>\n        <Text style={{color:'grey', fontSize:15}} >*You will receive a code on your phone number</Text>\n        <Pressable style={styles.btnOTP}>\n          <Text style={{color:Colors.Secondary, fontWeight:'700', fontSize:20, padding:10}} onPress={() => GetOTP()}>Get OTP</Text>\n        </Pressable>\n\n        <TextInput style={styles.textInput} placeholder={'Enter your One-Time-Password'}\n          onChangeText={(text) => setOTP(text)}/>\n        <Pressable style={styles.btnLogin} onPress={() => checkOTP()}>\n          <Text style={{color:Colors.Secondary, fontWeight:'700', fontSize:20, padding:10}}>LOGIN</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n    homeScreen:{\n        backgroundColor: Colors.Primary,\n        flex:1,\n        alignItems:'center',\n    },\n    loginView:{\n      backgroundColor: Colors.Secondary,\n      height: '80%',\n      width:'35%',\n      borderRadius: 40,\n      alignItems:'center',\n      marginTop:'3%'\n    },\n    loginText:{\n      color: Colors.Primary,\n      fontSize: 40,\n      fontWeight: 'bold',\n      marginTop: 20,\n    },\n    textInput:{\n      marginTop: 5,\n      marginBottom:5,\n      borderWidth:2,\n      borderRadius:10,\n      borderColor: Colors.Primary,\n      fontSize: 10,\n      height: 40,\n      width: 300,\n      textAlign: 'center',\n    },\n    textInfo:{\n      color: Colors.Primary,\n      fontSize: 20,\n      marginTop: 18,\n      fontWeight:'bold',\n    },\n    btnOTP:{\n      backgroundColor: Colors.Primary,\n      borderRadius:10,\n      marginTop: 10,\n      marginBottom: 5\n    },\n    btnLogin:{\n      backgroundColor: Colors.Primary,\n      borderRadius:10,\n      marginTop: 5\n    },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}