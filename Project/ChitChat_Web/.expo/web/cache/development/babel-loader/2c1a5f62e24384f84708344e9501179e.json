{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React from 'react';\nimport Colors from \"../utils/Colors\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { auth, firestore, storage } from \"../firebase.js\";\nimport { initializeApp, getApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { collection, addDoc, doc, setDoc } from \"firebase/firestore\";\nimport { ref, uploadBytes, getDownloadURL } from '@firebase/storage';\nimport { async } from '@firebase/util';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegistrationScreen = function RegistrationScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      firstName = _React$useState2[0],\n      setFirstname = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastName = _React$useState4[0],\n      setLastname = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedImage = _React$useState10[0],\n      setSelectedImage = _React$useState10[1];\n\n  var phoneNumber = auth.currentUser.phoneNumber;\n  var token = auth.currentUser.uid;\n  var url = \"\";\n\n  var image = require(\"../utils/Images/profilepicture.png\");\n\n  var app = getApp();\n  var storageRef = ref(storage, 'images/ProfilePictures/' + token);\n\n  var uploadProfile = function uploadProfile(uri, imageName) {\n    var response, blob;\n    return _regeneratorRuntime.async(function uploadProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context.sent;\n            uploadBytes(storageRef, blob).then(function (snapshot) {\n              getURL();\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context2.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context2.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              allowsEditing: true\n            }));\n\n          case 8:\n            pickerResult = _context2.sent;\n\n            if (!(pickerResult.cancelled === true)) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 11:\n            setSelectedImage({\n              localUri: pickerResult.uri\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getURL = function getURL() {\n    return _regeneratorRuntime.async(function getURL$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            getDownloadURL(storageRef).then(function (url) {\n              writeToDB(url);\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var writeToDB = function writeToDB(url) {\n    return _regeneratorRuntime.async(function writeToDB$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(setDoc(doc(firestore, \"users\", phoneNumber), {\n              UID: token,\n              firstName: firstName,\n              lastName: lastName,\n              email: email,\n              phoneNumber: phoneNumber,\n              profilepictureURL: url\n            }));\n\n          case 3:\n            navigation.replace('Main', {\n              paramKey: phoneNumber,\n              paramToken: token\n            });\n            _context4.next = 10;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(\"Error adding document: \", _context4.t0);\n            alert(\"Something went wrong! Please try again.ðŸ¤•\");\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  if (selectedImage !== null) {\n    image = {\n      uri: selectedImage.localUri\n    };\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.signUpView,\n      children: [_jsx(Text, {\n        style: styles.textSignup,\n        children: \"Create Your Profile\\uD83D\\uDE04\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return openImagePickerAsync();\n        },\n        children: _jsx(Image, {\n          style: styles.profilepicture,\n          source: image\n        })\n      }), _jsx(Text, {\n        style: styles.imageInfo,\n        children: \"*Click the Image to Pick your Profile Picture\"\n      }), _jsx(Text, {\n        style: styles.signUpTitle,\n        children: \"First Name\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return setFirstname(text);\n        },\n        placeholder: \"Chit Chat\",\n        placeholderTextColor: Colors.WHITE\n      }), _jsx(Text, {\n        style: styles.signUpTitle,\n        children: \"Last Name\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return setLastname(text);\n        },\n        placeholder: \"Chit Chat\",\n        placeholderTextColor: Colors.WHITE\n      }), _jsx(Text, {\n        style: styles.signUpTitle,\n        children: \"Email\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        placeholderTextColor: Colors.WHITE,\n        placeholder: \"example@email.com\",\n        keyboardType: \"email-address\"\n      }), _jsx(Pressable, {\n        style: styles.btnRegister,\n        onPress: function onPress() {\n          return writeToDB();\n        },\n        children: _jsx(Text, {\n          style: {\n            color: Colors.Primary,\n            fontWeight: '700',\n            fontSize: 20,\n            padding: 10\n          },\n          children: \"Create My Account \\u2705\"\n        })\n      })]\n    })\n  });\n};\n\nexport default RegistrationScreen;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flex: 1,\n    backgroundColor: Colors.Secondary\n  },\n  signUpView: {\n    backgroundColor: Colors.Primary,\n    height: '85%',\n    width: '55%',\n    borderRadius: 40,\n    alignItems: 'center',\n    marginTop: '3%'\n  },\n  btnRegister: {\n    backgroundColor: Colors.Secondary,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  signUpTitle: {\n    fontSize: 20,\n    color: Colors.Secondary,\n    fontWeight: '600'\n  },\n  textSignup: {\n    fontSize: 35,\n    color: Colors.Secondary,\n    alignSelf: 'center',\n    marginBottom: 15,\n    fontWeight: 'bold'\n  },\n  profilepicture: {\n    resizeMode: 'contain',\n    height: 200,\n    width: 200,\n    borderRadius: 40\n  },\n  imageInfo: {\n    color: Colors.GREY,\n    marginBottom: 10\n  },\n  textInput: {\n    marginVertical: 15,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: Colors.WHITE_GREY,\n    color: Colors.Secondary,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/RegistrationScreen.js"],"names":["React","Colors","ImagePicker","auth","firestore","storage","initializeApp","getApp","getAuth","collection","addDoc","doc","setDoc","ref","uploadBytes","getDownloadURL","async","RegistrationScreen","route","navigation","useState","firstName","setFirstname","lastName","setLastname","email","setEmail","password","setPassword","selectedImage","setSelectedImage","phoneNumber","currentUser","token","uid","url","image","require","app","storageRef","uploadProfile","uri","imageName","fetch","response","blob","then","snapshot","getURL","openImagePickerAsync","requestMediaLibraryPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","allowsEditing","pickerResult","cancelled","localUri","writeToDB","UID","profilepictureURL","replace","paramKey","paramToken","console","error","styles","container","signUpView","textSignup","profilepicture","imageInfo","signUpTitle","textInput","text","WHITE","btnRegister","color","Primary","fontWeight","fontSize","padding","StyleSheet","create","alignItems","flex","backgroundColor","Secondary","height","width","borderRadius","marginTop","alignSelf","marginBottom","resizeMode","GREY","marginVertical","borderWidth","borderColor","WHITE_GREY","textAlign"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, TouchableOpacity, TextInput, Pressable } from 'react-native';\nimport React from 'react';\nimport Colors from '../utils/Colors';\nimport * as ImagePicker from 'expo-image-picker';\nimport { auth, firestore, storage } from '../firebase.js';\nimport { initializeApp, getApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { collection, addDoc, doc, setDoc } from \"firebase/firestore\"; \nimport { ref, uploadBytes, getDownloadURL } from '@firebase/storage';\nimport { async } from '@firebase/util';\n\nconst RegistrationScreen = ({route, navigation}) => {\n  const [firstName, setFirstname] = React.useState();\n  const [lastName, setLastname] = React.useState();\n  const [email, setEmail] = React.useState();\n  const [password, setPassword] = React.useState();\n  const [selectedImage, setSelectedImage] = React.useState(null);\n  const phoneNumber = auth.currentUser.phoneNumber;\n  const token = auth.currentUser.uid;\n  var url = \"\";\n  var image = require('../utils/Images/profilepicture.png');\n  \n  const app = getApp();\n  const storageRef = ref(storage, 'images/ProfilePictures/'+token);\n  \n  \n  let uploadProfile = async (uri, imageName) => {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n\n    uploadBytes(storageRef, blob).then((snapshot) => {\n      getURL();\n    });\n  }\n\n  // Image Pick\n  let openImagePickerAsync = async () => {\n    let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    \n    if (permissionResult.granted === false) {\n      alert(\"Permission to access camera roll is required!\");\n      return;\n    }\n    let pickerResult = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true\n    });\n    if (pickerResult.cancelled === true) {\n      return;\n    }\n    setSelectedImage({ localUri: pickerResult.uri }); \n  }\n\n  let getURL = async () => {\n    getDownloadURL(storageRef).then((url) => {\n      writeToDB(url);\n    });\n  }\n\n\n  let writeToDB = async (url) => {\n    try {\n        await setDoc(doc(firestore, \"users\", phoneNumber), {\n          UID: token,\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          phoneNumber: phoneNumber,\n          profilepictureURL: url,\n        });\n        navigation.replace('Main', { \n            paramKey: phoneNumber,\n            paramToken: token\n        });\n    } catch (e) {\n        console.error(\"Error adding document: \", e);\n        alert(\"Something went wrong! Please try again.ðŸ¤•\")\n      }\n  }\n  \n  if (selectedImage !== null) {\n    image = { uri: selectedImage.localUri }\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.signUpView}>\n        <Text style={styles.textSignup}>Create Your ProfileðŸ˜„</Text>\n        <TouchableOpacity onPress={() => openImagePickerAsync() }>\n          <Image style={styles.profilepicture} source={image}/>\n        </TouchableOpacity>\n        <Text style={styles.imageInfo}>*Click the Image to Pick your Profile Picture</Text>\n        \n        <Text style={styles.signUpTitle}>First Name</Text>\n        <TextInput  style={styles.textInput} onChangeText={text => setFirstname(text)} placeholder={\"Chit Chat\"} placeholderTextColor = {Colors.WHITE}/>\n        <Text style={styles.signUpTitle}>Last Name</Text>\n        <TextInput  style={styles.textInput} onChangeText={text => setLastname(text)} placeholder={\"Chit Chat\"} placeholderTextColor = {Colors.WHITE}/>\n        <Text style={styles.signUpTitle}>Email</Text>\n        <TextInput style={styles.textInput} onChangeText={text => setEmail(text)} placeholderTextColor = {Colors.WHITE} placeholder={\"example@email.com\"} keyboardType={\"email-address\"}/>\n        <Pressable style={styles.btnRegister} onPress = {() => writeToDB()}>\n            <Text style={{color:Colors.Primary, fontWeight:'700', fontSize:20, padding:10}}>Create My Account âœ…</Text>\n        </Pressable>\n      </View>\n    </View>\n  )\n}\n\nexport default RegistrationScreen\n\nconst styles = StyleSheet.create({\n  container:{\n    alignItems: 'center',\n    flex:1,\n    backgroundColor: Colors.Secondary,\n  },\n  signUpView:{\n    backgroundColor: Colors.Primary,\n    height: '85%',\n    width:'55%',\n    borderRadius: 40,\n    alignItems:'center',\n    marginTop:'3%'\n  },\n  btnRegister:{\n    backgroundColor: Colors.Secondary,\n    borderRadius:10,\n    marginTop: 5\n  },\n  signUpTitle:{\n    fontSize: 20,\n    color: Colors.Secondary,\n    fontWeight: '600',\n  },\n  textSignup:{\n      fontSize: 35,\n      color: Colors.Secondary,\n      alignSelf: 'center',\n      marginBottom: 15,\n      fontWeight: 'bold'\n  },\n  profilepicture:{\n    resizeMode: 'contain',\n    height: 200,\n    width: 200,\n    borderRadius: 40,\n  },\n  imageInfo:{\n    color: Colors.GREY,\n    marginBottom: 10,\n  },\n  textInput:{\n    marginVertical: 15,\n    borderWidth:2,\n    borderRadius:10,\n    borderColor: Colors.WHITE_GREY,\n    color: Colors.Secondary,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n})"]},"metadata":{},"sourceType":"module"}