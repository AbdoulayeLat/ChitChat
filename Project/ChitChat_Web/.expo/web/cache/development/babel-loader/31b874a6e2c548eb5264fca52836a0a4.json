{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport ChatScreen from \"./Chat/ChatScreen\";\nimport Contact from \"./Chat/Contact\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Colors from \"../utils/Colors\";\nimport { auth } from \"../firebase\";\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\n\nvar Main = function Main(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var dimensions = useWindowDimensions();\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      drawerType: dimensions.width >= 768 ? 'permanent' : 'back',\n      headerShown: false,\n      drawerStyle: {\n        backgroundColor: Colors.Secondary\n      },\n      drawerActiveTintColor: Colors.Primary,\n      drawerLabelStyle: {\n        color: Colors.Primary\n      }\n    },\n    drawerContent: function drawerContent(props) {\n      var filteredProps = _objectSpread(_objectSpread({}, props), {}, {\n        state: _objectSpread(_objectSpread({}, props.state), {}, {\n          routeNames: props.state.routeNames.filter(function (routeName) {\n            routeName !== 'Chat';\n          }),\n          routes: props.state.routes.filter(function (route) {\n            return route.name !== 'Chat';\n          })\n        })\n      });\n\n      return _jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, filteredProps), {}, {\n        children: _jsx(DrawerItemList, _objectSpread({}, filteredProps))\n      }));\n    },\n    children: [\">\", _jsx(Drawer.Screen, {\n      name: \"Contact\",\n      component: Contact\n    }), _jsx(Drawer.Screen, {\n      name: \"Chat\",\n      component: ChatScreen\n    })]\n  });\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/Main.js"],"names":["React","Profile","ChatScreen","Contact","NavigationContainer","createDrawerNavigator","Colors","auth","Feather","Ionicons","AntDesign","Drawer","Main","route","navigation","dimensions","useWindowDimensions","drawerType","width","headerShown","drawerStyle","backgroundColor","Secondary","drawerActiveTintColor","Primary","drawerLabelStyle","color","props","filteredProps","state","routeNames","filter","routeName","routes","name"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;AACA,OAAOC,UAAP;AACA,OAAOC,OAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,MAAP;AACA,SAASC,IAAT;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AAEA,IAAMC,MAAM,GAAGN,qBAAqB,EAApC;;AACA,IAAMO,IAAI,GAAG,SAAPA,IAAO,OAAyB;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAGlC,MAAMC,UAAU,GAAGC,mBAAmB,EAAtC;AACF,SACE,MAAC,MAAD,CAAQ,SAAR;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,UAAU,EAAEF,UAAU,CAACG,KAAX,IAAoB,GAApB,GAA0B,WAA1B,GAAwC,MADvC;AAEbC,MAAAA,WAAW,EAAE,KAFA;AAGbC,MAAAA,WAAW,EAAC;AACRC,QAAAA,eAAe,EAAEf,MAAM,CAACgB;AADhB,OAHC;AAMbC,MAAAA,qBAAqB,EAAEjB,MAAM,CAACkB,OANjB;AAObC,MAAAA,gBAAgB,EAAC;AACbC,QAAAA,KAAK,EAAEpB,MAAM,CAACkB;AADD;AAPJ,KADjB;AAYE,IAAA,aAAa,EAAE,uBAACG,KAAD,EAAW;AACxB,UAAMC,aAAa,mCACdD,KADc;AAEjBE,QAAAA,KAAK,kCACAF,KAAK,CAACE,KADN;AAEHC,UAAAA,UAAU,EAAEH,KAAK,CAACE,KAAN,CAAYC,UAAZ,CAAuBC,MAAvB,CAIV,UAACC,SAAD,EAAe;AACbA,YAAAA,SAAS,KAAK,MAAd;AACD,WANS,CAFT;AAUHC,UAAAA,MAAM,EAAEN,KAAK,CAACE,KAAN,CAAYI,MAAZ,CAAmBF,MAAnB,CACN,UAAClB,KAAD;AAAA,mBACEA,KAAK,CAACqB,IAAN,KAAe,MADjB;AAAA,WADM;AAVL;AAFY,QAAnB;;AAkBA,aACE,KAAC,uBAAD,kCAA6BN,aAA7B;AAAA,kBACE,KAAC,cAAD,oBAAoBA,aAApB;AADF,SADF;AAKD,KApCH;AAAA,oBAuCI,KAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,SAAS,EAAEzB;AAAzC,MAvCJ,EAwCI,KAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,SAAS,EAAED;AAAtC,MAxCJ;AAAA,IADF;AA4CD,CAhDD;;AAkDA,eAAeU,IAAf","sourcesContent":["import { View, Text, Platform, useWindowDimensions } from 'react-native';\nimport React from 'react';\nimport Profile from './Profile';\nimport ChatScreen from './Chat/ChatScreen';\nimport Contact from './Chat/Contact';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Colors from '../utils/Colors';\nimport { auth } from '../firebase';\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\n\nconst Drawer = createDrawerNavigator();\nconst Main = ({route, navigation}) => {\n    // const phoneNumber = auth.currentUser.phoneNumber;\n    // const token = auth.currentUser.uid;\n    const dimensions = useWindowDimensions();\n  return (\n    <Drawer.Navigator\n      screenOptions={{\n        drawerType: dimensions.width >= 768 ? 'permanent' : 'back',\n        headerShown: false,\n        drawerStyle:{\n            backgroundColor: Colors.Secondary,\n        },\n        drawerActiveTintColor: Colors.Primary,\n        drawerLabelStyle:{\n            color: Colors.Primary\n        }\n      }}\n      drawerContent={(props) => {\n        const filteredProps = {\n          ...props,\n          state: {\n            ...props.state,\n            routeNames: props.state.routeNames.filter(\n              // To hide single option\n              // (routeName) => routeName !== 'HiddenPage1',\n              // To hide multiple options you can add & condition\n              (routeName) => {\n                routeName !== 'Chat';\n              }\n            ),\n            routes: props.state.routes.filter(\n              (route) =>\n                route.name !== 'Chat'\n            ),\n          },\n        };\n        return (\n          <DrawerContentScrollView {...filteredProps}>\n            <DrawerItemList {...filteredProps} />\n          </DrawerContentScrollView>\n        );\n      }}>\n    >\n        {/* <Drawer.Screen name=\"Profile\" component={Profile} initialParams={{phoneNumber, token}}/> */}\n        <Drawer.Screen name=\"Contact\" component={Contact} />\n        <Drawer.Screen name=\"Chat\" component={ChatScreen} />\n    </Drawer.Navigator>\n  )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}