{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport React, { useEffect } from 'react';\nimport Colors from \"../../utils/Colors\";\nimport ButtonCustom from \"../../components/ButtonCustom\";\nimport { collection, addDoc, doc, setDoc, getDocs, getDoc, query, orderBy, onSnapshot, where } from 'firebase/firestore';\nimport { auth, firestore, storage } from \"../../firebase\";\nimport { async } from '@firebase/util';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Contact = function Contact(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var userUID = auth.currentUser.uid;\n\n  var _React$useState = React.useState('+1'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      phoneNumber = _React$useState2[0],\n      setPhoneNumber = _React$useState2[1];\n\n  var userPhoneNumber = route.params.phoneNumber;\n\n  var checkUser = function checkUser() {\n    getDoc(doc(firestore, \"users\", phoneNumber)).then(function (docSnap) {\n      if (docSnap.exists()) {\n        navigation.navigate('ChatScreen', {\n          friendPhoneNumber: phoneNumber,\n          userPhoneNumber: userPhoneNumber\n        });\n      } else {\n        Alert.alert(\"This phone number hasn't registered to ChitChat yet! Invite themðŸ˜‰\");\n      }\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.safeAreacontainer,\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.infoText,\n          children: \"Who do you want to chat with:\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          keyboardType: 'phone-pad',\n          placeholder: \"+11234567899\",\n          onChangeText: function onChangeText(text) {\n            return setPhoneNumber(text.replace(/ /g, ''));\n          }\n        }), _jsx(ButtonCustom, {\n          text: 'Enter Chat',\n          onPress: function onPress() {\n            return checkUser();\n          }\n        })]\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  safeAreacontainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Colors.Primary,\n    flex: 1\n  },\n  textInput: {\n    marginTop: 5,\n    marginBottom: 5,\n    borderWidth: 2,\n    borderRadius: 10,\n    backgroundColor: Colors.SILVER,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n  infoText: {\n    color: Colors.Secondary,\n    fontSize: 20,\n    marginTop: 50\n  }\n});\nexport default Contact;","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/Chat/Contact.js"],"names":["React","useEffect","Colors","ButtonCustom","collection","addDoc","doc","setDoc","getDocs","getDoc","query","orderBy","onSnapshot","where","auth","firestore","storage","async","Contact","route","navigation","userUID","currentUser","uid","useState","phoneNumber","setPhoneNumber","userPhoneNumber","params","checkUser","then","docSnap","exists","navigate","friendPhoneNumber","Alert","alert","styles","safeAreacontainer","Keyboard","dismiss","container","infoText","textInput","text","replace","StyleSheet","create","alignItems","justifyContent","backgroundColor","Primary","flex","marginTop","marginBottom","borderWidth","borderRadius","SILVER","fontSize","height","width","textAlign","color","Secondary"],"mappings":"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","sourcesContent":["import { View, Text, TextInput, StyleSheet, ActivityIndicator, Keyboard, Alert, SafeAreaView, ScrollView, FlatList, TouchableWithoutFeedback } from 'react-native';\nimport React, {useEffect} from 'react';\nimport Colors from '../../utils/Colors';\nimport ButtonCustom from '../../components/ButtonCustom';\nimport {collection, addDoc, doc, setDoc, getDocs, getDoc, query, orderBy, onSnapshot, where } from 'firebase/firestore';\nimport { auth, firestore, storage } from '../../firebase';\nimport { async } from '@firebase/util';\n\nconst Contact = ({route,navigation}) => {\n  const userUID = auth.currentUser.uid;\n  const [phoneNumber, setPhoneNumber] = React.useState('+1');\n  const userPhoneNumber = route.params.phoneNumber;\n\n  const checkUser = () => {\n    //Get Data from Firestore DBf\n    getDoc(doc(firestore, \"users\", phoneNumber)).then(docSnap => {\n      if (docSnap.exists()) {\n        navigation.navigate('ChatScreen', {\n          friendPhoneNumber: phoneNumber,\n          userPhoneNumber: userPhoneNumber,\n        })\n      } else {\n        Alert.alert(\"This phone number hasn't registered to ChitChat yet! Invite themðŸ˜‰\")\n      }\n    })\n  }\n  \n  return (\n    <SafeAreaView style={styles.safeAreacontainer}>\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <View style={styles.container}>\n          <Text style={styles.infoText}>Who do you want to chat with:</Text>\n          <TextInput style={styles.textInput} keyboardType={'phone-pad'} placeholder='+11234567899' onChangeText={(text) => setPhoneNumber(text.replace(/ /g, ''))}/>\n          <ButtonCustom text={'Enter Chat'} onPress={() => checkUser()}/>\n        </View>\n      </TouchableWithoutFeedback>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  safeAreacontainer:{\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Colors.Primary,\n    flex:1\n  },\n  textInput:{\n    marginTop: 5,\n    marginBottom:5,\n    borderWidth:2,\n    borderRadius:10,\n    backgroundColor: Colors.SILVER,\n    fontSize: 20,\n    height: 40,\n    width: 300,\n    textAlign: 'center'\n  },\n  infoText:{\n    color: Colors.Secondary,\n    fontSize: 20,\n    marginTop: 50,\n  },\n});\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}