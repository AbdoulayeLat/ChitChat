{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport ChatScreen from \"./Chat/ChatScreen\";\nimport Contact from \"./Chat/Contact\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Colors from \"../utils/Colors\";\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nvar Main = function Main(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var phoneNumber = route.params.paramKey;\n  var token = route.params.paramToken;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n\n          if (route.name === 'Profile') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Chat') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          } else if (route.name === 'Contact') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n        },\n        tabBarActiveTintColor: 'white',\n        tabBarInactiveTintColor: 'gray',\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          backgroundColor: Colors.Secondary,\n          position: 'absolute',\n          bottom: 20,\n          left: Platform.OS == \"android\" ? 10 : 15,\n          right: Platform.OS == \"android\" ? 10 : 15,\n          elevation: 0,\n          borderRadius: 20,\n          height: Platform.OS == \"android\" ? 60 : 80\n        },\n        tabBarIconStyle: {\n          marginTop: Platform.OS == \"android\" ? 10 : 20\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n              color = _ref4.color;\n          return _jsx(Feather, {\n            name: \"user\",\n            size: Platform.OS == \"android\" ? 40 : 30,\n            color: focused ? 'white' : 'gray'\n          });\n        }\n      },\n      initialParams: {\n        phoneNumber: phoneNumber,\n        token: token\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Chat\",\n      component: Contact,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var focused = _ref5.focused,\n              color = _ref5.color;\n          return _jsx(Ionicons, {\n            name: \"chatbox-ellipses\",\n            size: Platform.OS == \"android\" ? 40 : 30,\n            color: focused ? 'white' : 'gray'\n          });\n        }\n      },\n      initialParams: {\n        phoneNumber: phoneNumber,\n        token: token\n      }\n    })]\n  });\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/abdoulayendiaye/Documents/chitchat/screens/Main.js"],"names":["React","Profile","ChatScreen","Contact","NavigationContainer","createBottomTabNavigator","createStackNavigator","Colors","Feather","Ionicons","AntDesign","Tab","Stack","Main","route","navigation","phoneNumber","params","paramKey","token","paramToken","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","backgroundColor","Secondary","position","bottom","left","Platform","OS","right","elevation","borderRadius","height","tabBarIconStyle","marginTop","headerShown"],"mappings":"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","sourcesContent":["import { View, Text, Platform } from 'react-native';\nimport React from 'react';\nimport Profile from './Profile';\nimport ChatScreen from './Chat/ChatScreen';\nimport Contact from './Chat/Contact';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Colors from '../utils/Colors';\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\nconst Main = ({route, navigation}) => {\n    const phoneNumber = route.params.paramKey;\n    const token = route.params.paramToken;\n  return (\n    <Tab.Navigator\n        screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n                if (route.name === 'Profile') {\n                    iconName = focused\n                    ? 'ios-information-circle'\n                    : 'ios-information-circle-outline';\n                } else if (route.name === 'Chat') {\n                    iconName = focused ? 'ios-list-box' : 'ios-list';\n                }else if (route.name === 'Contact') {\n                    iconName = focused ? 'ios-list-box' : 'ios-list';\n                }\n            },\n            tabBarActiveTintColor: 'white',\n            tabBarInactiveTintColor: 'gray',\n            tabBarShowLabel: false,\n            tabBarStyle:{\n                backgroundColor: Colors.Secondary,\n                position: 'absolute',\n                bottom: 20,\n                left: Platform.OS == \"android\" ? 10 : 15,\n                right: Platform.OS == \"android\" ? 10 : 15,\n                elevation: 0,\n                borderRadius: 20,\n                height: Platform.OS == \"android\" ? 60 : 80\n            },\n            tabBarIconStyle:{\n                marginTop: Platform.OS == \"android\" ? 10 : 20\n            }\n        })}\n    >\n        <Tab.Screen name='Profile' component={Profile} options={{\n            headerShown: false,\n            tabBarIcon: ({focused, color}) => (\n                <Feather name=\"user\" size={Platform.OS == \"android\" ? 40 : 30} color={focused ? 'white' : 'gray'} />\n            ), \n        }} initialParams={{phoneNumber, token}}/>\n        <Tab.Screen name='Chat' component={Contact} options={{\n            headerShown: false,\n            tabBarIcon: ({focused, color}) => (\n                <Ionicons name=\"chatbox-ellipses\" size={Platform.OS == \"android\" ? 40 : 30} color={focused ? 'white' : 'gray'} />\n            ), \n        }} initialParams={{phoneNumber:phoneNumber, token:token}}/>\n    </Tab.Navigator>\n  )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}